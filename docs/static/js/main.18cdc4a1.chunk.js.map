{"version":3,"sources":["Utils.js","State.js","Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["addMinutes","date","minutes","Date","getTime","getUserOptions","console","log","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","o","checked","saveDurationToLocalStorage","localStorage","setItem","saveSlotToLocalStorage","saveSpeedyToLocalStorage","meetingSpeedy","updateFromLocalStorage","updateStartTimeOptions","getItem","obj","innerHTML","indexOf","Utils","checkNativeNotificationsAvailability","a","isNative","Capacitor","getPlatform","isPluginAvailable","isCapacitorPluginAvailable","avail","requestNativeNotificationsPermissions","LocalNotifications","checkPermissions","display","requestPermissions","error","sendNativeNotification","message","when","isNativeNotificationsAvailable","schedule","notifications","title","body","id","at","sound","attachments","actionTypeId","extra","success","clearNativeNotifications","getPendingNotifications","pending","length","cancel","checkBrowserNotificationsAvailability","window","checkBrowserNotificationsSchedulingAvailability","NotificationIsSupported","Notification","prototype","requestBrowserNotificationsPermissions","permission","requestPermission","sendBrowserNotification","notification","requireInteraction","alert","checkNotificationsAvailability","n","b","getPending","clearScheduledNotifications","sendNotification","now","scheduleNotification","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","App","state","data","onDurationChange","bind","onSpeedyChange","onSlotChange","endTime","setClock","getTimeRemaining","updateClock","t","total","style","backgroundColor","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","className","htmlFor","name","defaultValue","onChange","type","href","target","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oRAqCO,SAASA,EAAWC,EAAMC,GAE/B,OAAO,IAAIC,KAAKF,EAAKG,UAAoB,IAARF,GCzB5B,SAASG,IACdC,QAAQC,IAAI,kBAEZ,IAAIC,OAASC,EAGTC,GAFJF,EAASG,SAASC,eAAe,oBAEJC,QAAQL,EAAOM,eAAeC,MAC3DP,EAASG,SAASC,eAAe,eAEjC,IAAII,GAAe,EACnBV,QAAQC,IAAI,uBAAwBC,EAAOM,eACvCN,EAAOM,eAAiB,IAC5BE,EAAcR,EAAOK,QAAQL,EAAOM,eAAeC,OAEnD,IAEIE,EAAG,CACL,gBAAmBP,EACnB,YAAeM,EACf,cALoBL,SAASC,eAAe,iBAAiBM,SAQ/D,OADAZ,QAAQC,IAAI,mBAAoBU,GACzBA,EAGF,SAASE,IACdb,QAAQC,IAAI,8BAEZ,IAAIU,EAAIZ,IACRe,aAAaC,QAAQ,kBAAmBJ,EAAEP,iBAGrC,SAASY,IACdhB,QAAQC,IAAI,0BAEZ,IAAIU,EAAIZ,IACRe,aAAaC,QAAQ,cAAeJ,EAAED,aAIjC,SAASO,IACdjB,QAAQC,IAAI,4BAEZ,IAAIU,EAAIZ,IACRe,aAAaC,QAAQ,gBAAiBJ,EAAEO,eAYnC,SAASC,EAAuBC,GACrCpB,QAAQC,IAAI,0BAEZ,IAAIG,EAAkBU,aAAaO,QAAQ,mBAC3CrB,QAAQC,IAAI,qBAAsBG,SAAwBA,GAE1D,IAAIM,EAAcI,aAAaO,QAAQ,eACvCrB,QAAQC,IAAI,iBAAkBS,SAAoBA,GAElD,IAAIQ,EAAgBJ,aAAaO,QAAQ,iBACzCrB,QAAQC,IAAI,mBAAoBiB,SAAsBA,GAElDd,IACFC,SAASC,eAAe,mBAAmBG,MAAQL,EAEjDgB,KDnFC,SAAwBlB,EAAQO,GACrCT,QAAQC,IAAI,kBAEZ,IAAIqB,EAAMjB,SAASC,eAAeJ,GAGlC,OAAY,OAARoB,GACQA,EAAIC,UAAUC,QAAQ,UAAYf,EAAQ,MAAQ,EC+E1DgB,CAAqB,cAAef,KACtCL,SAASC,eAAe,eAAeG,MAAQC,GAE7CQ,IACFlB,QAAQC,IAAI,wBAA4C,SAAlBiB,GACtCb,SAASC,eAAe,iBAAiBM,QAA6B,SAAlBM,G,2BCxFzCQ,I,2EAAf,gCAAAC,EAAA,6DACE3B,QAAQC,IAAI,wCAGR2B,EAAwC,QAA5BC,IAAUC,cAC1B9B,QAAQC,IAAI,YAAa2B,GAL3B,SAQyCC,IAAUE,kBAAkB,sBARrE,cAQMC,EARN,OASEhC,QAAQC,IAAI,8BAA+B+B,IAE/B,EAEZC,EAASL,GAAYI,EACrBhC,QAAQC,IAAI,wCAAyCgC,GAdvD,kBAeSA,GAfT,6C,+BAkBeC,I,2EAAf,4BAAAP,EAAA,6DACE3B,QAAQC,IAAI,yCAERgC,GAAQ,EAHd,kBAMkBE,IAAmBC,mBANrC,UAOsB,YAPtB,OAOUC,QAPV,iBAQMJ,GAAQ,EARd,yCAUoBE,IAAmBG,qBAVvC,QAWwB,YAXxB,OAWYD,UACJJ,GAAQ,GAZhB,0DAgBIjC,QAAQuC,MAAR,MAhBJ,eAmBEvC,QAAQC,IAAI,gDAAiDgC,GAnB/D,kBAoBSA,GApBT,2D,+BAuBeO,E,gFAAf,WAAsCC,EAASC,GAA/C,iBAAAf,EAAA,6DACE3B,QAAQC,IAAI,yBAA0BwC,EAASC,GADjD,SAG6ChB,IAH7C,UAGMiB,EAHN,OAIE3C,QAAQC,IAAI,kCAAmC0C,GAJjD,KAMKA,GANL,sCAM6CT,IAN7C,gFAQ0BC,IAAmBS,SAAS,CAC9CC,cAAe,CACb,CACEC,MAAO,iBACPC,KAAMN,EACNO,IAAI,IAAInD,MAAOC,UACf8C,SAAU,CAAEK,GAAIP,GAChBQ,MAAO,KACPC,YAAa,KACbC,aAAc,GACdC,MAAO,SAlBnB,eAQUC,EARV,OAsBMtD,QAAQC,IAAI,UAAWqD,GAtB7B,mBAuBa,GAvBb,0CAyBMtD,QAAQuC,MAAR,MAzBN,mBA0Ba,GA1Bb,kCA6BS,GA7BT,4D,+BAgCegB,I,2EAAf,8BAAA5B,EAAA,6DACE3B,QAAQC,IAAI,4BADd,SAGsBuD,IAHtB,UAGMC,EAHN,UAIMZ,EAAgBY,EAAQZ,gBAERA,EAAca,OAAS,GAN7C,gCAOUvB,IAAmBwB,OAAOF,GAPpC,OAQIzD,QAAQC,IAAI,+BAAgC4C,GARhD,4C,+BAeee,I,2EAAf,4BAAAjC,EAAA,6DACE3B,QAAQC,IAAI,yCAKRgC,EAAS,iBAAkB4B,OAC/B7D,QAAQC,IAAI,kCAAmCgC,GAPjD,kBAQSA,GART,4C,+BAWe6B,I,2EAAf,8BAAAnC,EAAA,6DACE3B,QAAQC,IAAI,mDADd,SAGsC2D,IAHtC,cAGMG,EAHN,QAIc,EAGZ9B,EAAS8B,GAA2B,gBAAiBC,aAAaC,UAClEjE,QAAQC,IAAI,2CAA4CgC,GAR1D,kBASSA,GATT,4C,+BAYeiC,I,2EAAf,8BAAAvC,EAAA,yDACE3B,QAAQC,IAAI,2CAER2D,IAHN,mBAIoC,YAA5BI,aAAaG,WAJrB,uBAKMnE,QAAQC,IAAI,iDALlB,SAM6B+D,aAAaI,oBAN1C,OAMUD,EANV,OAOMnE,QAAQC,IAAI,kCAAmCkE,GAPrD,cAWMlC,EAAqC,YAA5B+B,aAAaG,WAC1BnE,QAAQC,IAAI,0CAA2CgC,GAZzD,kBAaSA,GAbT,6C,+BAgBeoC,E,gFAAf,WAAuC5B,EAASC,GAAhD,eAAAf,EAAA,yDACE3B,QAAQC,IAAI,0BAA2BwC,EAASC,GADlD,KAGMkB,KAHN,qCAGuDM,IAHvD,oDAIIlE,QAAQC,IAAI,yEAMRqE,EAAe,IAAIN,aAAavB,EAJzB,CACT8B,oBAAoB,IAItBvE,QAAQC,IAAI,4BAA6BqE,GAX7C,wBAcItE,QAAQC,IAAI,4CACZuE,MAAM/B,GAfV,6C,sBAwBO,SAAegC,IAAtB,+B,4CAAO,8BAAA9C,EAAA,6DACL3B,QAAQC,IAAI,kCADP,SAGSyB,IAHT,cAGDgD,EAHC,gBAISd,IAJT,cAIDe,EAJC,gBAKCb,IALD,WAOFY,EAPE,kCAQGxC,IARH,oCASKyC,EATL,kCAUGT,IAVH,6C,sBAcA,SAAeV,IAAtB,+B,4CAAO,8BAAA7B,EAAA,6DACL3B,QAAQC,IAAI,2BAERwD,EAAU,CACZZ,cAAe,IAJZ,SAMKnB,IANL,mDAOaS,IAAmByC,aAPhC,OAOHnB,EAPG,OAQCZ,EAAgBY,EAAQZ,cAC5B7C,QAAQC,IAAI,+BAAgC4C,GATzC,yBAWKiB,IAXL,oCAYH9D,QAAQC,IAAI,yDAZT,iCAcEwD,GAdF,6C,sBAiBA,SAAeoB,IAAtB,+B,4CAAO,sBAAAlD,EAAA,6DACL3B,QAAQC,IAAI,+BADP,SAEKyB,IAFL,kDAGG6B,IAHH,uBAKKO,IALL,mCAMH9D,QAAQC,IAAI,6DANT,6C,sBAWA,SAAe6E,EAAtB,kC,4CAAO,WAAgCrC,GAAhC,iBAAAd,EAAA,6DACL3B,QAAQC,IAAI,mBAAoBwC,EAAS,OAErCC,EAAO,IAAI7C,KAAKA,KAAKkF,MAAQ,KAH5B,SAIevC,EAAuBC,EAASC,GAJ/C,OAIDY,EAJC,OAKLtD,QAAQC,IAAI,6BAA8BqD,GAErCA,IACHtD,QAAQC,IAAI,oCACZoE,EAAwB5B,EAASC,IAT9B,4C,sBAaA,SAAesC,EAAtB,oC,4CAAO,WAAoCvC,EAASC,GAA7C,eAAAf,EAAA,6DACL3B,QAAQC,IAAI,uBAAwBwC,EAASC,GAEzCY,GAAU,EAHT,SAKK5B,IALL,kDAMac,EAAuBC,EAASC,GAN7C,OAMHY,EANG,+BASKQ,IATL,oCAUH9D,QAAQC,IAAI,sDAVT,eAaLD,QAAQC,IAAI,wBAAyBqD,GAbhC,kBAcEA,GAdF,6C,iCCzMH2B,OAAe9E,EACf+E,GAAqC,EACrCC,GAAmC,EAEjCC,EAAkB,qCAClBC,GAAc,yBAGdC,G,kDAIJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,KAAM,IAErB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBANR,E,0FAkBd,WAAsB1C,EAAI6C,GAA1B,MAoCWC,EAqBAC,EAgBMC,EAzEjB,WAAArE,EAAA,iGAAAA,EAAA,MAyEE,4BAAAA,EAAA,yDACQsE,EAAIF,EAAiBF,GAG3B7F,QAAQC,IAAI,iBAGRgG,EAAEC,MAAQ,KAPhB,gBAQI7F,SAAS0C,KAAKoD,MAAMC,gBAAkB,UAR1C,0BAUI/F,SAAS0C,KAAKoD,MAAMC,gBAAkB,UACjClB,EAXT,wBAYMA,GAAqC,EAZ3C,UAaYmB,EAA+BjB,GAb3C,aAiBMa,EAAEC,MAAQ,GAjBhB,iBAkBIJ,EAASG,EAAEK,MAAOL,EAAErG,QAASqG,EAAEM,SAlBnC,2BAoBIC,cAAcvB,GAEda,EAAS,EAAG,EAAG,GACfzF,SAAS0C,KAAKoD,MAAMC,gBAAkB,UAEjCjB,EAzBT,wBA0BMA,GAAmC,EA1BzC,UA2BYkB,EAA+BhB,IA3B3C,6CAzEF,uBAyEiBW,EAzEjB,2CAyDWD,EAzDX,SAyD4BF,GACxB,IAAMK,EAAQrG,KAAK4G,MAAMZ,GAAWhG,KAAK4G,MAAM,IAAI5G,MAC7C0G,EAAUG,KAAKC,MAAOT,EAAQ,IAAQ,IACtCtG,EAAU8G,KAAKC,MAAOT,EAAQ,IAAO,GAAM,IAC3CI,EAAQI,KAAKC,MAAOT,EAAK,KAAuB,IAGtD,MAAO,CACLA,QACAU,KAJWF,KAAKC,MAAMT,EAAK,OAK3BI,QACA1G,UACA2G,YAjCKT,EApCX,SAoCoBQ,EAAO1G,EAAS2G,GAGhC,IAAMM,EAAQxG,SAASC,eAAe0C,GAChC8D,EAAYD,EAAME,cAAc,UAChCC,EAAcH,EAAME,cAAc,YAClCE,EAAcJ,EAAME,cAAc,YAEpCG,GAAK,IAAMZ,GAAOa,OAAO,GACzBC,GAAK,IAAMxH,GAASuH,OAAO,GAC3BE,GAAK,IAAMd,GAASY,OAAO,GAE/BL,EAAUvF,UAAY2F,EACtBF,EAAYzF,UAAY6F,EACxBH,EAAY1F,UAAY8F,EAEpBhH,UAAYA,SAAQ,QACtBA,SAASyC,MAAQoE,EAAI,IAAME,EAAI,IAAMC,EAApBH,iDApDrBlH,QAAQC,IAAI,mBAEZuG,cAAcvB,GACdC,GAAqC,EACrCC,GAAmC,EALrC,UASQkB,IATR,cAWMiB,EAAc,IAAIzH,KAAKA,KAAK4G,MAAMZ,GAAW,MAC/BhG,KAAKkF,OAZzB,kCAacsB,EAAmCjB,EAAiBkC,GAblE,oCAcMpC,GAAqC,EAd3C,gCAiBIlF,QAAQC,IAAI,4EACZiF,GAAqC,EAlBzC,aAqBKW,EAAUhG,KAAKkF,OArBpB,kCAsBcsB,EAAmChB,GAAaQ,GAtB9D,oCAuBMV,GAAmC,EAvBzC,gCA0BInF,QAAQC,IAAI,iDACZkF,GAAmC,EA3BvC,eA8BEnF,QAAQC,IAAI,qCAAsCiF,GAClDlF,QAAQC,IAAI,mCAAoCkF,GA/BlD,UAkCQkB,IAlCR,yBAyGQL,IAzGR,QA2GEf,EAAesC,YAAYvB,EAAa,KA3G1C,4C,wFAgHA,SAAmBwB,EAAW3B,GAC5B7F,QAAQC,IAAI,qBAGZ,IAAIM,EAAU,CACZkH,KAAM,UACNC,OAAQ,WAEJC,EAAeH,EAAUI,mBAAmB,QAASrH,GACvDsH,EAAahC,EAAQ+B,mBAAmB,QAASrH,GAErDF,SAASC,eAAe,eAAewH,YAAcH,EAAe,OAASE,I,oCAK/E,WACE7H,QAAQC,IAAI,0BAEZ,IAAIG,EFtKD,WAGL,IAAIF,EAGJ,OALAF,QAAQC,IAAI,uBAGZC,EAASG,SAASC,eAAe,oBACJC,QAAQL,EAAOM,eAAeC,MEiKnCsH,GAElBC,EHjID,SAAsBjD,EAAKkD,GAChCjI,QAAQC,IAAI,gBAEZ,IAEIiI,EAAU,IAAIrI,KAAKA,KAAKkF,OAC5BmD,EAAQC,SAAS,EAAG,EAAG,EAAG,GAC1B,IAAMC,EAAW,IAAIvI,KAAKA,KAAKkF,OAC/BqD,EAASD,SAAS,GAAI,GAAI,GAAI,IAI9B,IAFA,IAAIH,EAAQ,GAEJE,EAAUE,GAAU,CAC1B,IAAIC,EAAO3I,EAAWwI,EAVR,IAWVI,EAAYvD,GAAOmD,GAAWnD,EAAMsD,EAOxC,GANAL,EAAMO,KAAK,CACTC,MAAON,EAAQN,qBACfnH,MAAOyH,EAAQO,WACfH,aAGEA,EAAU,CAEZ,IAAK,IAAII,EAAE,EAAGA,EAAI,EAAGA,IACnBV,EAAMO,KAAK,CACTC,MAAOH,EAAKT,qBACZnH,MAAO4H,EAAKI,WACZH,UAAU,IAEZD,EAAO3I,EAAW2I,EA1BR,IA4BZ,MAGFH,EAAUG,EAIZ,IAAIM,EAAYjC,KAAKkC,KAAKX,EAnCV,IAmCkC,EAMlD,OALAjI,QAAQC,IAAI,YAAa0I,GAEzBX,EAAQA,EAAMb,MAAOa,EAAMtE,OAASiF,GACpC3I,QAAQC,IAAI,QAAS+H,GAEdA,EGqFOvG,CH5JT,WACLzB,QAAQC,IAAI,UAEZ,IAAIN,EAAO,IAAIE,KAAKA,KAAKkF,OAErByD,EAAQ7I,EAAKiI,qBAGbjH,EAAI,CACN2F,MAHU3G,EAAKkJ,WAIfC,KAHSnJ,EAAKoJ,aAIdP,QACA7I,QAGF,OADAK,QAAQC,IAAIU,GACLA,EG4IKc,GACyB9B,KAAMS,GAErCF,EAASG,SAASC,eAAe,eACrCJ,EAAOK,QAAQmD,OAAS,EAExB,IAAI4E,OAAWnI,EAEf,IAAI,IAAI6I,KAAShB,EACf9H,EAAOK,QAAQL,EAAOK,QAAQmD,QAAU,IAAIuF,OAAOjB,EAAMgB,GAAOR,MAAOR,EAAMgB,GAAOvI,OAChFuH,EAAMgB,GAAOV,WACfA,EAAWN,EAAMgB,GAAOvI,OAE5BP,EAAOO,MAAQ6H,I,oEAKjB,sCAAA3G,EAAA,6DACE3B,QAAQC,IAAI,mBFjIdD,QAAQC,IAAI,sBAEZY,IACAG,IACAC,IEiIMN,EAAIoH,IACJ3H,EAAkBO,EAAEP,gBACpBM,EAAcC,EAAED,YAChBQ,EAAgBP,EAAEO,cAElBgI,EAAmB,IAAIrJ,KAAKA,KAAK4G,MAAM/F,IAC3CV,QAAQC,IAAI,mBAAoBiJ,IAGV,IAAlBhI,GAA4C,SAAlBA,IAC5Bd,GAAoC,GAGlC+I,EAAiB,IAAItJ,KAAKA,KAAK4G,MAAMyC,GAAsC,GAAlB9I,EAAuB,KACpFJ,QAAQC,IAAI,iBAAkBkJ,GAG9BC,KAAKC,kBAAkBH,EAAkBC,GAtB3C,UAwBQC,KAAKE,gBAAgB,WAAYH,GAxBzC,iD,2HA8BA,sBAAAxH,EAAA,6DACE3B,QAAQC,IAAI,oBAEZ8H,IACAqB,KAAKhI,yBACL2G,EAA6BqB,KAAKhI,wBALpC,SAMQgI,KAAKG,kBANb,gD,yHASA,sBAAA5H,EAAA,6DACE3B,QAAQC,IAAI,kBAEZ8H,IAHF,SAIQqB,KAAKG,kBAJb,gD,uHAOA,sBAAA5H,EAAA,6DACE3B,QAAQC,IAAI,gBAEZ8H,IAHF,SAIQqB,KAAKG,kBAJb,gD,4HASA,sBAAA5H,EAAA,6DACE3B,QAAQC,IAAI,qBADd,SAGQoG,IAHR,cAKE+C,KAAKhI,yBACL2G,EAA6BqB,KAAKhI,wBANpC,SAOQgI,KAAKG,kBAPb,gD,0EAaA,WAEE,IAAI3H,EAAwC,QAA5BC,IAAUC,cAE1B,OACI,sBAAK0H,UAAU,UAAf,UAEE,yDAEA,mBAAGA,UAAU,cAAb,SAA2B,sBAAMxG,GAAG,kBAEpC,sBAAKA,GAAG,WAAR,UACE,gCACE,sBAAMwG,UAAU,UAChB,qBAAKA,UAAU,YAAf,sBAEF,gCACE,sBAAMA,UAAU,YAChB,qBAAKA,UAAU,YAAf,wBAEF,gCACE,sBAAMA,UAAU,YAChB,qBAAKA,UAAU,YAAf,2BAIJ,gCAEE,8BACE,uBAAOA,UAAU,QAAQC,QAAQ,kBAAjC,+BACA,yBAAQD,UAAU,SAASE,KAAK,kBAAkB1G,GAAG,kBAAkB2G,aAAa,KAClFC,SAAUR,KAAK3D,iBADjB,UAEE,wBAAQhF,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,2BAIJ,8BACE,uBAAO+I,UAAU,QAAQC,QAAQ,gBAAjC,kCACA,uBAAOD,UAAU,WAAWK,KAAK,WAAW7G,GAAG,gBAAgB0G,KAAK,gBAClEE,SAAUR,KAAKzD,oBAInB,8BACE,uBAAO6D,UAAU,QAAQC,QAAQ,cAAjC,kCACA,wBAAQD,UAAU,SAASE,KAAK,cAAc1G,GAAG,cAC/C4G,SAAUR,KAAKxD,aADjB,SAGE,wBAAQnF,MAAM,KAAd,kCAMFmB,GACF,4BACE,sBAAM4H,UAAU,WAAhB,SACE,mBAAGM,KAAK,uBAAuBC,OAAO,SAAUC,IAAI,aAApD,qC,GAhTEC,aA0TH3E,MChUA4E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxK,SAASC,eAAe,SAM1B4J,O","file":"static/js/main.18cdc4a1.chunk.js","sourcesContent":["//-------------------------------\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//-------------------------------\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//-------------------------------\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//-------------------------------\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//-------------------------------\n  \n    \n  ","\nimport * as Utils from './Utils'\n\n//-------------------------------\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n\n  let meetingDuration = select.options[select.selectedIndex].value;\n  select = document.getElementById(\"meetingSlot\");\n\n  let meetingSlot = -1;\n  console.log('select.selectedIndex', select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n}\n\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (Utils.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n}\n\n  //-------------------------------","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n///////////////////////////////////////////////////////////////\n\nasync function checkNativeNotificationsAvailability () {\n  console.log('checkNativeNotificationsAvailability');\n  \n  // web, ios, android?\n  let isNative = (Capacitor.getPlatform() !== \"web\");\n  console.log('isNative?', isNative);\n\n  // Capacitor?\n  let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');    \n  console.log('isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n\n  let avail = false;\n  //avail = (isCapacitorPluginAvailable);\n  avail = (isNative && isCapacitorPluginAvailable);\n  console.log('checkNativeNotificationsAvailability?', avail);\n  return avail;\n}\n\nasync function requestNativeNotificationsPermissions () {\n  console.log('requestNativeNotificationsPermissions');\n\n  let avail = false;\n\n  try {\n    let p = await LocalNotifications.checkPermissions();\n    if (p.display === \"granted\") {\n      avail = true;\n    } else {\n      let a = await LocalNotifications.requestPermissions();\n      if (a.display === \"granted\") {\n        avail = true;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  console.log('requestNativeNotificationsPermissions - avail', avail);  \n  return avail;\n}\n\nasync function sendNativeNotification(message, when) {\n  console.log('sendNativeNotification', message, when);\n\n  let isNativeNotificationsAvailable = await checkNativeNotificationsAvailability();\n  console.log('isNativeNotificationsAvailable?', isNativeNotificationsAvailable);\n\n  if(isNativeNotificationsAvailable && await requestNativeNotificationsPermissions()) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"TimelyMeetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: null,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nasync function clearNativeNotifications() {\n  console.log('clearNativeNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"Cleared Native Notifications\", notifications);\n  }\n}\n\n\n///////////////////////////////////////////////////////////////\n\nasync function checkBrowserNotificationsAvailability () {\n  console.log('checkBrowserNotificationsAvailability');\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n  // https://web.dev/tags/notifications/\n  // https://notifications.spec.whatwg.org/\n  let avail = ('Notification' in window);\n  console.log('Browser Notification supported?', avail);\n  return avail;\n}\n\nasync function checkBrowserNotificationsSchedulingAvailability () {\n  console.log('checkBrowserNotificationsSchedulingAvailability');\n\n  let NotificationIsSupported = await checkBrowserNotificationsAvailability();\n  let avail = false;\n\n  // https://web.dev/notification-triggers/\n  avail = (NotificationIsSupported && 'showTrigger' in Notification.prototype);\n  console.log(\"Browser Notification Triggers supported?\", avail);\n  return avail;\n}\n\nasync function requestBrowserNotificationsPermissions () {\n  console.log('requestBrowserNotificationsPermissions');\n\n  if (checkBrowserNotificationsAvailability()) {\n    if (Notification.permission !== \"granted\") {\n      console.log('Browser Notification permissions being asked.');\n      let permission = await Notification.requestPermission();\n      console.log('Browser Notification permission', permission);     \n    }\n  }\n\n  let avail = (Notification.permission === 'granted');\n  console.log('requestBrowserNotificationsPermissions?', avail);\n  return avail;\n}\n\nasync function sendBrowserNotification(message, when) {\n  console.log('sendBrowserNotification', message, when);\n\n  if (checkBrowserNotificationsAvailability() && await requestBrowserNotificationsPermissions()) {\n    console.log('Browser Notification permissions already granted, attempting to send.');\n\n    let opts = {\n      requireInteraction: true\n    }\n\n    var notification = new Notification(message, opts);\n    console.log('Browser Notification sent', notification);\n    \n  } else {\n    console.log('Browser Notification permissions denied.');\n    alert(message);\n  }\n\n}\n\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport async function checkNotificationsAvailability () {\n  console.log('checkNotificationsAvailability');\n\n  let n = await checkNativeNotificationsAvailability();\n  let b = await checkBrowserNotificationsAvailability();\n  await checkBrowserNotificationsSchedulingAvailability();\n  \n  if(n) {\n    await requestNativeNotificationsPermissions();\n  } else if(b) {\n    await requestBrowserNotificationsPermissions();\n  }\n}\n\nexport async function getPendingNotifications() {\n  console.log('getPendingNotifications');\n\n  let pending = {\n    notifications: []\n  }\n  if (await checkNativeNotificationsAvailability()) {\n    pending = await LocalNotifications.getPending();\n    let notifications = pending.notifications;\n    console.log(\"Pending Native Notifications\", notifications);\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('getPendingNotifications - Not implemented for Browser');\n  }\n  return pending;\n}\n\nexport async function clearScheduledNotifications() {\n  console.log('clearScheduledNotifications');\n  if (await checkNativeNotificationsAvailability()) {\n    await clearNativeNotifications();\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('clearScheduledNotifications - Not implemented for Browser');\n  }\n}\n\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW');\n\n  let when = new Date(Date.now() + 1000);\n  let success = await sendNativeNotification(message, when);\n  console.log('Native Notifications Sent?', success);\n\n  if (!success) {\n    console.log('Attempting Browser Notification.');\n    sendBrowserNotification(message, when);\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when);\n\n  let success = false;\n\n  if( await checkNativeNotificationsAvailability() ) {\n    success = await sendNativeNotification(message, when);  \n  }\n\n  if( await checkBrowserNotificationsSchedulingAvailability() ) {\n    console.log('scheduleNotification - Not implemented for Browser');\n  }\n\n  console.log('scheduleNotification?', success);\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n\n  await scheduleNotification(message, when);\n}","import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport * as State from './State'\nimport * as Utils from './Utils'\nimport * as Notifications from './Notifications'\n\nimport { Capacitor } from \"@capacitor/core\";\n\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in 5 minutes';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\nclass App extends Component {\n\n  //-------------------------------\n\n  constructor() {\n    super();\n    this.state = { data: [] };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n\n  }\n\n  //-------------------------------\n  \n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  //-------------------------------\n\n  async initializeClock(id, endTime) {\n    console.log('initializeClock');\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - 5 * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning, warningTime) ) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n    \n    if(endTime > Date.now() ) {\n      if (await Notifications.scheduleNotification(message_end, endTime) ) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n  \n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    \n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n  \n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n      \n  \n      if (t.total > 5 * 60 * 1000) {\n        document.body.style.backgroundColor = \"#00ECB9\"; // default\n      } else {\n        document.body.style.backgroundColor = \"#FBF719\"; // yellow\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning);\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);\n        \n        setClock(0, 0, 0);\n        document.body.style.backgroundColor = \"#FFFFFF\"; // white\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n    }\n  \n    await updateClock();\n  \n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //-------------------------------\n\n  updateMeetingTime (startTime, endTime) {\n    console.log('updateMeetingTime');\n  \n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n  \n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n  \n  //-------------------------------\n  \n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n  \n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n  \n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n  \n    let selected = undefined;\n  \n    for(let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }    \n    select.value = selected;\n  }\n  \n  //-------------------------------\n  \n  async updateCountdown () {\n    console.log('updateCountdown');\n  \n    State.saveToLocalStorage();\n  \n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n  \n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n  \n  \n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n  \n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n  \n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime);\n  \n  }\n  \n  //-------------------------------\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    State.saveSlotToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    await Notifications.checkNotificationsAvailability();\n\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n  //-------------------------------\n\n  render() {\n    // web, ios, android.\n    let isNative = (Capacitor.getPlatform() !== \"web\");\n\n    return (\n        <div className=\"content\">\n\n          <h1>Meeting Countdown Timer</h1>\n\n          <p className=\"meetingTime\"><span id=\"meetingTime\"></span></p>\n\n          <div id=\"clockdiv\">\n            <div>\n              <span className=\"hours\"></span>\n              <div className=\"clocktext\">Hours</div>\n            </div>\n            <div>\n              <span className=\"minutes\"></span>\n              <div className=\"clocktext\">Minutes</div>\n            </div>\n            <div>\n              <span className=\"seconds\"></span>\n              <div className=\"clocktext\">Seconds</div>\n            </div>\n          </div>\n\n          <div>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingDuration\">Meeting duration:</label>\n              <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n                onChange={this.onDurationChange}>\n                <option value=\"15\">15 mins</option>\n                <option value=\"30\">30 mins</option>\n                <option value=\"45\">45 mins</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"150\">2.5 hours</option>\n                <option value=\"180\">3 hours</option>\n              </select>\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSpeedy\">End 5 minutes early?</label>\n              <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n                onChange={this.onSpeedyChange}\n              />\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSlot\">Meeting start time: </label>\n              <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\" \n                onChange={this.onSlotChange}\n              >\n                <option value=\"-1\">Loading ...</option>\n              </select>\n            </p>\n          </div>\n\n          { \n            (!isNative) && \n            <p>\n              <span className=\"tinyText\" >\n                <a href=\"https://khilnani.org\" target=\"_blank\"  rel=\"noreferrer\">Nik Khilnani</a>\n              </span>\n            </p>\n          }\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}