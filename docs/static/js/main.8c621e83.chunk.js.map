{"version":3,"sources":["images/logo-trans-512.png","Utils/State.js","Utils/FormUtils.js","Utils/DateUtils.js","Utils/Notifications.js","App/index.js","reportWebVitals.js","index.js"],"names":["getUserOptions","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","checked","saveEnabledStateToLocalStorage","enabled","localStorage","setItem","getEnabledStateToLocalStorage","getItem","saveDurationToLocalStorage","o","saveSpeedyToLocalStorage","meetingSpeedy","saveToLocalStorage","saveSlotToLocalStorage","updateFromLocalStorage","updateStartTimeOptions","obj","innerHTML","indexOf","FormHelpers","addMinutes","date","minutes","Date","getTime","checkNativeNotificationsAvailability","a","isNative","Capacitor","getPlatform","isPluginAvailable","isCapacitorPluginAvailable","avail","requestNativeNotificationsPermissions","LocalNotifications","checkPermissions","display","requestPermissions","sendNativeNotification","message","when","isNativeNotificationsAvailable","schedule","notifications","title","body","id","at","sound","vibrate","attachments","actionTypeId","extra","clearNativeNotifications","getPendingNotifications","pending","length","cancel","checkBrowserNotificationsAvailability","window","checkBrowserNotificationsSchedulingAvailability","NotificationIsSupported","Notification","prototype","requestBrowserNotificationsPermissions","permission","requestPermission","sendBrowserNotification","requireInteraction","alert","pauseNotifications","clearScheduledNotifications","enableNotifications","checkNotificationsAvailability","n","b","getPending","sendNotification","now","scheduleNotification","success","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","supportLink","App","state","onDurationChange","bind","onSpeedyChange","onSlotChange","onRefreshClick","togglePause","launchSupport","endTime","setClock","getTimeRemaining","updateClock","t","bodyClassList","classList","total","remove","add","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","Utils","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","setState","CapacitorApp","openUrl","url","Browser","open","SplashScreen","hide","className","src","logoImage","alt","htmlFor","name","onChange","width","height","onClick","defaultValue","type","getFullYear","href","target","rel","role","tabindex","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c621e83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-trans-512.70cb432f.png\";","import * as FormHelpers from './FormUtils'\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\n//////////////////////////////////////////////////////\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n\n  let meetingDuration = select.options[select.selectedIndex].value;\n  select = document.getElementById(\"meetingSlot\");\n\n  let meetingSlot = -1;\n  console.log('select.selectedIndex', select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveEnabledStateToLocalStorage(enabled) {\n  console.log(\"saveEnabledStateToLocalStorage\", enabled);\n  localStorage.setItem('enabled', enabled)\n}\n\n//////////////////////////////////////////////////////\n\nexport function getEnabledStateToLocalStorage() {\n  console.log(\"getEnabledStateToLocalStorage\");\n\n  let enabled = localStorage.getItem('enabled')\n  if(enabled && typeof(enabled) === \"string\") {\n    enabled = (enabled === \"true\");\n  } else {\n    enabled = true; // default is enabled\n  }\n  console.log('getEnabledStateToLocalStorage - enabled', enabled, typeof(enabled));\n  return enabled;\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n}\n\n//////////////////////////////////////////////////////\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (FormHelpers.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//////////////////////////////////////////////////////\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//////////////////////////////////////////////////////\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nlet enabled = true;\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nasync function checkNativeNotificationsAvailability () {\n  console.log('checkNativeNotificationsAvailability');\n  \n  // web, ios, android?\n  let isNative = (Capacitor.getPlatform() !== \"web\");\n  console.log('checkNativeNotificationsAvailability - isNative?', isNative);\n\n  // Capacitor?\n  let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');    \n  console.log('checkNativeNotificationsAvailability - isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n\n  let avail = false;\n  //avail = (isCapacitorPluginAvailable);\n  avail = (isNative && isCapacitorPluginAvailable);\n  console.log('checkNativeNotificationsAvailability?', avail);\n  return avail;\n}\n\nasync function requestNativeNotificationsPermissions () {\n  console.log('requestNativeNotificationsPermissions');\n\n  let avail = false;\n\n  try {\n    let p = await LocalNotifications.checkPermissions();\n    if (p.display === \"granted\") {\n      avail = true;\n    } else {\n      let a = await LocalNotifications.requestPermissions();\n      if (a.display === \"granted\") {\n        avail = true;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  console.log('requestNativeNotificationsPermissions - avail', avail);  \n  return avail;\n}\n\nasync function sendNativeNotification(message, when) {\n  console.log('sendNativeNotification', message, when);\n\n  let isNativeNotificationsAvailable = await checkNativeNotificationsAvailability();\n  console.log('sendNativeNotification - isNativeNotificationsAvailable?', isNativeNotificationsAvailable);\n\n  if(isNativeNotificationsAvailable && await requestNativeNotificationsPermissions()) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"Timely Meetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: './public/assets/double-beep.aiff',\n            vibrate: true,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nasync function clearNativeNotifications() {\n  console.log('clearNativeNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"clearNativeNotifications - Notifications\", notifications);\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nasync function checkBrowserNotificationsAvailability () {\n  console.log('checkBrowserNotificationsAvailability');\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n  // https://web.dev/tags/notifications/\n  // https://notifications.spec.whatwg.org/\n  let avail = ('Notification' in window);\n  console.log('checkBrowserNotificationsAvailability - supported?', avail);\n  return avail;\n}\n\nasync function checkBrowserNotificationsSchedulingAvailability () {\n  console.log('checkBrowserNotificationsSchedulingAvailability');\n\n  let NotificationIsSupported = await checkBrowserNotificationsAvailability();\n  let avail = false;\n\n  // https://web.dev/notification-triggers/\n  avail = (NotificationIsSupported && 'showTrigger' in Notification.prototype);\n  console.log(\"checkBrowserNotificationsSchedulingAvailability - Triggers supported?\", avail);\n  return avail;\n}\n\nasync function requestBrowserNotificationsPermissions () {\n  console.log('requestBrowserNotificationsPermissions');\n\n  if (checkBrowserNotificationsAvailability()) {\n    if (Notification.permission !== \"granted\") {\n      console.log('requestBrowserNotificationsPermissions - being asked.');\n      let permission = await Notification.requestPermission();\n      console.log('requestBrowserNotificationsPermissions - permission', permission);     \n    }\n  }\n\n  let avail = (Notification.permission === 'granted');\n  console.log('requestBrowserNotificationsPermissions?', avail);\n  return avail;\n}\n\nasync function sendBrowserNotification(message, when) {\n  console.log('sendBrowserNotification', message, when);\n\n  if (checkBrowserNotificationsAvailability() && await requestBrowserNotificationsPermissions()) {\n    console.log('sendBrowserNotification - permissions already granted, attempting to send.');\n\n    let opts = {\n      requireInteraction: true,\n      vibrate: [200, 100, 200],\n    }\n\n    var notification = new Notification(message, opts);\n    console.log('sendBrowserNotification - sent', notification);\n    \n  } else {\n    console.log('sendBrowserNotification - permissions denied.');\n    alert(message);\n  }\n\n}\n\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport async function pauseNotifications() {\n  console.log('pauseNotifications - current enabled?', enabled);\n  enabled = false;\n  await clearScheduledNotifications();\n  console.log('pauseNotifications - new enabled?', enabled);\n}\n\nexport async function enableNotifications() {\n  console.log('enableNotifications - current enabled?', enabled);\n  enabled = true;\n  console.log('enableNotifications - new enabled?', enabled);\n}\n\nexport async function checkNotificationsAvailability () {\n  console.log('checkNotificationsAvailability');\n\n  let n = await checkNativeNotificationsAvailability();\n  let b = await checkBrowserNotificationsAvailability();\n  await checkBrowserNotificationsSchedulingAvailability();\n  \n  if(n) {\n    await requestNativeNotificationsPermissions();\n  } else if(b) {\n    await requestBrowserNotificationsPermissions();\n  }\n}\n\nexport async function getPendingNotifications() {\n  console.log('getPendingNotifications');\n\n  let pending = {\n    notifications: []\n  }\n  if (await checkNativeNotificationsAvailability()) {\n    pending = await LocalNotifications.getPending();\n    let notifications = pending.notifications;\n    console.log(\"getPendingNotifications - Notifications\", notifications);\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('getPendingNotifications - Not implemented for Browser');\n  }\n  return pending;\n}\n\nexport async function clearScheduledNotifications() {\n  console.log('clearScheduledNotifications');\n  if (await checkNativeNotificationsAvailability()) {\n    await clearNativeNotifications();\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('clearScheduledNotifications - Not implemented for Browser');\n  }\n}\n\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW', 'enabled', enabled);\n\n  if(enabled) {\n    let when = new Date(Date.now() + 1000);\n    let success = await sendNativeNotification(message, when);\n    console.log('sendNotification - Native Notifications Sent?', success);\n\n    if (!success) {\n      console.log('sendNotification - Attempting Browser Notification.');\n      sendBrowserNotification(message, when);\n    }\n  } else {\n    console.log(\"sendNotification - Disabled\");\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when, 'enabled', enabled);\n\n  let success = false;\n\n  if (enabled) {\n    if( await checkNativeNotificationsAvailability() ) {\n      success = await sendNativeNotification(message, when);  \n    }\n    if( await checkBrowserNotificationsSchedulingAvailability() ) {\n      console.log('scheduleNotification - Not implemented for Browser');\n    }\n    console.log('scheduleNotification?', success);\n  } else {\n    console.log(\"scheduleNotification - Disabled\");\n  }\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n\n  await scheduleNotification(message, when);\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","import React, { Component } from \"react\";\n\nimport { Capacitor } from '@capacitor/core';\n\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { App as CapacitorApp } from '@capacitor/app';\nimport { Browser } from '@capacitor/browser';\n\nimport { \n  RefreshCircle as RefreshCircleIcon , \n  Notifications as NotificationsEnabledIcon, \n  NotificationsOffOutline as NotificationsDisabledIcon \n} from 'react-ionicons'\n\nimport logoImage from './../images/logo-trans-512.png'\n\nimport * as State from '../Utils/State'\nimport * as Utils from '../Utils/DateUtils'\nimport * as Notifications from '../Utils/Notifications'\n\nimport './App.css';\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in 5 minutes';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\nconst supportLink = \"mailto:support@timelymeetings.com\";\n\n// web, ios, android.\nconst isNative = (Capacitor.getPlatform() !== \"web\");\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\n/*\nNativeApp.addListener('appStateChange', ({ isActive }) => {\n  console.log('App state changed. Is active?', isActive);\n});\n\nNativeApp.addListener('appUrlOpen', data => {\n  console.log('App opened with URL:', data);\n});\n\nNativeApp.addListener('appRestoredResult', data => {\n  console.log('Restored state:', data);\n});\n*/\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nclass App extends Component {\n\n  //////////////////////////////////////////////////////\n\n  constructor() {\n    super();\n    this.state = {\n      enabled: false\n    };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n    this.onRefreshClick = this.onRefreshClick.bind(this);\n    this.togglePause = this.togglePause.bind(this);\n    this.launchSupport = this.launchSupport.bind(this);\n  }\n\n  //////////////////////////////////////////////////////\n  \n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  async initializeClock(id, endTime) {\n    console.log('initializeClock');\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - 5 * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning, warningTime) ) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n    \n    if(endTime > Date.now() ) {\n      if (await Notifications.scheduleNotification(message_end, endTime) ) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n  \n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    \n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n  \n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n      \n      const bodyClassList = document.body.classList;\n  \n      if (t.total > 5 * 60 * 1000) {\n        bodyClassList.remove('bodyWarning');\n        bodyClassList.remove('bodyComplete');\n        bodyClassList.add('bodyDefault');\n      } else {\n        bodyClassList.add('bodyWarning');\n        bodyClassList.remove('bodyComplete');\n        bodyClassList.remove('bodyDefault');\n\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning);\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);        \n        setClock(0, 0, 0);\n\n        bodyClassList.remove('bodyWarning');\n        bodyClassList.add('bodyComplete');\n        bodyClassList.remove('bodyDefault');\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n    }\n  \n    await updateClock();\n  \n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //////////////////////////////////////////////////////\n\n  updateMeetingTime (startTime, endTime) {\n    console.log('updateMeetingTime');\n  \n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n  \n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n  \n  //////////////////////////////////////////////////////\n  \n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n  \n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n  \n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n  \n    let selected = undefined;\n  \n    for(let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }    \n    select.value = selected;\n  }\n  \n  //////////////////////////////////////////////////////\n  \n  async updateCountdown () {\n    console.log('updateCountdown');\n  \n    State.saveToLocalStorage();\n  \n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n  \n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n  \n  \n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n  \n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n  \n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime);\n  \n  }\n  \n  //////////////////////////////////////////////////////\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    await this.updateCountdown();\n  }\n\n  async onRefreshClick() {\n    console.log(\"onRefreshClick\");\n\n    this.updateStartTimeOptions();\n    await this.updateCountdown();\n  }\n\n  async togglePause() {\n    let enabled = this.state.enabled;\n    console.log(\"togglePause - current enabled?\", enabled);\n\n    enabled = !enabled;\n\n    this.setState({enabled: enabled});\n\n    console.log(\"togglePause - new enabled?\", enabled);\n\n    if (enabled) {\n      await Notifications.enableNotifications();\n      await this.updateCountdown();\n    } else {\n      await Notifications.pauseNotifications();\n    }\n\n    await State.saveEnabledStateToLocalStorage(enabled);\n  }\n\n  async launchSupport() {\n    console.log(\"launchSupport\", isNative);\n    if(isNative) {\n      CapacitorApp.openUrl({url: supportLink}) \n    } else {\n      Browser.open({url: supportLink})\n    }\n  }\n  \n  //////////////////////////////////////////////////////\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    await Notifications.checkNotificationsAvailability();\n    \n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n\n    this.setState(\n      {\n        enabled: State.getEnabledStateToLocalStorage()\n      }\n    );\n\n    console.log(this.state);\n\n    if(!this.state.enabled) {\n      await Notifications.pauseNotifications();\n    }\n\n    SplashScreen.hide();\n  }\n\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n\n  render() {\n    return (\n        <div className=\"content\">\n\n          <div className=\"header\">\n            <img src={logoImage} className=\"logo\" alt=\"Timely Meetings logo\"/>\n            <span className=\"headerText\">\n              <h1>Timely Meetings</h1>\n              <h4>Countdown Timer</h4>\n            </span>\n          </div>\n\n          <p className=\"meetingTime\">\n            <span id=\"meetingTime\"></span>\n          </p>\n\n          <div id=\"clockdiv\">\n            <div>\n              <span className=\"hours\"></span>\n              <div className=\"clocktext\">Hours</div>\n            </div>\n            <div>\n              <span className=\"minutes\"></span>\n              <div className=\"clocktext\">Minutes</div>\n            </div>\n            <div>\n              <span className=\"seconds\"></span>\n              <div className=\"clocktext\">Seconds</div>\n            </div>\n          </div>\n\n          <div>\n\n          <p>\n              <label className=\"label\" htmlFor=\"meetingSlot\">Start time: </label>\n              <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\" \n                onChange={this.onSlotChange}\n              >\n                <option value=\"-1\">Loading ...</option>\n              </select>\n              <RefreshCircleIcon\n              className=\"iconRefresh\"\n                title='Reset timer'\n                width='30px'\n                height='30px'\n                onClick={this.onRefreshClick}\n              />\n              {\n                (this.state.enabled === false) && \n                  <NotificationsDisabledIcon\n                  className=\"iconNotifications\"\n                  title='Click to enable notifications'\n                  height=\"28px\"\n                  width=\"28px\"\n                  onClick={this.togglePause}\n                />\n              }\n\n              {\n                (this.state.enabled === true) && \n                <NotificationsEnabledIcon\n                  className=\"iconNotifications\"\n                  title='Click to disable notifications'\n                  height=\"28px\"\n                  width=\"28px\"\n                  onClick={this.togglePause}\n                />\n              }\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingDuration\">Duration: </label>\n              <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n                onChange={this.onDurationChange}>\n                <option value=\"15\">15 mins</option>\n                <option value=\"30\">30 mins</option>\n                <option value=\"45\">45 mins</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"150\">2.5 hours</option>\n                <option value=\"180\">3 hours</option>\n              </select>\n\n              <label id=\"meetingSpeedyLabel\" className=\"label\" htmlFor=\"meetingSpeedy\">End early?</label>\n              <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n                onChange={this.onSpeedyChange}\n              />\n\n            </p>\n\n            <p>\n              <span className=\"tinyText copyrightText\" >\n                &copy; {(new Date()).getFullYear()} <a href=\"https://khilnani.org\" target=\"_blank\"  rel=\"noreferrer\">Nik Khilnani</a>\n                <span> | </span>\n                 <div className=\"link\" role=\"button\" tabindex=\"0\" onClick={this.launchSupport}>Support?</div>\n                {\n                  (isNative) && \n                  (\n                    <span> | <a href=\"https://timelymeetings.com\" target=\"_blank\"  rel=\"noreferrer\">TimelyMeetings.com</a></span>\n                  )\n                }\n\n                {\n                  /*\n                  (!isNative) && \n                  (\n                    <span> | <a href=\"/legal/termsofuse/\" target=\"_blank\"  rel=\"noreferrer\">Terms of Use</a> | <a href=\"/legal/privacy/\" target=\"_blank\"  rel=\"noreferrer\">Privacy Policy</a></span>\n                  )\n                  */\n                }\n                \n              </span>\n            </p>\n\n          </div>\n\n        </div>\n    );\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport default App;\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//////////////////////////////////////////////////////\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////"],"sourceRoot":""}