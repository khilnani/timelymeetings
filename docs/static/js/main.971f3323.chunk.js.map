{"version":3,"sources":["Utils/State.js","Utils/FormUtils.js","Utils/DateUtils.js","assets/audio/double-beep.mp3","assets/audio/blank.mp3","assets/images/icon-128.png","Utils/Notifications.js","assets/images/logo-trans-512.png","App/index.js","reportWebVitals.js","index.js"],"names":["getUserOptions","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","checked","saveEnabledStateToLocalStorage","enabled","localStorage","setItem","getEnabledStateToLocalStorage","getItem","saveDurationToLocalStorage","o","saveSpeedyToLocalStorage","meetingSpeedy","saveToLocalStorage","saveSlotToLocalStorage","meetingWarning","saveWarningToLocalStorage","updateFromLocalStorage","updateStartTimeOptions","obj","innerHTML","indexOf","FormHelpers","addMinutes","date","minutes","Date","getTime","doubleBeepIOSAudioPath","isNative","Capacitor","getPlatform","playEmptyAudio","a","Audio","blankAudio","crossorigin","autoplay","play","playNotificationAudio","doubleBeepAudio","checkNativeNotificationsAvailability","isPluginAvailable","isCapacitorPluginAvailable","avail","requestNativeNotificationsPermissions","LocalNotifications","checkPermissions","display","requestPermissions","sendNativeNotification","message","when","isNativeNotificationsAvailable","schedule","notifications","title","body","id","at","sound","vibrate","attachments","actionTypeId","extra","clearNativeNotifications","getPendingNotifications","pending","length","cancel","checkBrowserNotificationsAvailability","window","e","checkBrowserNotificationsSchedulingAvailability","NotificationIsSupported","Notification","prototype","requestBrowserNotificationsPermissions","permission","requestPermission","sendBrowserNotification","requireInteraction","icon","icon128","onshow","alert","pauseNotifications","clearScheduledNotifications","enableNotifications","checkNotificationsAvailability","n","b","getPending","sendNotification","now","scheduleNotification","success","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","supportLink","App","state","onDurationChange","bind","onSpeedyChange","onSlotChange","onRefreshClick","togglePause","onWarningChange","launchSupport","endTime","setClock","getTimeRemaining","updateClock","t","bodyClassList","classList","total","remove","add","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","Utils","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","setState","CapacitorApp","openUrl","url","Browser","open","SplashScreen","hide","className","src","logoImage","alt","htmlFor","name","defaultValue","onChange","height","width","onClick","type","getFullYear","href","target","rel","role","tabIndex","version","published","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.971f3323.chunk.js","sourcesContent":["import * as FormHelpers from './FormUtils'\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\n//////////////////////////////////////////////////////\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n\n  let meetingSlot = -1;\n  select = document.getElementById(\"meetingSlot\");\n  console.log(\"getUserOptions - meetingSlot.selectedIndex\", select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  select = document.getElementById(\"meetingWarning\");\n  let meetingWarning = select.options[select.selectedIndex].value;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n    \"meetingWarning\": meetingWarning,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveEnabledStateToLocalStorage(enabled) {\n  console.log(\"saveEnabledStateToLocalStorage\", enabled);\n  localStorage.setItem('enabled', enabled)\n}\n\n//////////////////////////////////////////////////////\n\nexport function getEnabledStateToLocalStorage() {\n  console.log(\"getEnabledStateToLocalStorage\");\n\n  let enabled = localStorage.getItem('enabled')\n  if(enabled && typeof(enabled) === \"string\") {\n    enabled = (enabled === \"true\");\n  } else {\n    enabled = true; // default is enabled\n  }\n  console.log('getEnabledStateToLocalStorage - enabled', enabled, typeof(enabled));\n  return enabled;\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\nexport function saveWarningToLocalStorage() {\n  console.log(\"saveWarningToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingWarning', o.meetingWarning)\n}\n\n//////////////////////////////////////////////////////\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n  saveWarningToLocalStorage();\n}\n\n//////////////////////////////////////////////////////\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  let meetingWarning = localStorage.getItem('meetingWarning')\n  console.log('lc.meetingWarning', meetingWarning, typeof(meetingWarning));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (FormHelpers.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n\n  if(meetingWarning) {\n    document.getElementById(\"meetingWarning\").value = meetingWarning;\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//////////////////////////////////////////////////////\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//////////////////////////////////////////////////////\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","export default __webpack_public_path__ + \"static/media/double-beep.9a5eea21.mp3\";","export default __webpack_public_path__ + \"static/media/blank.280fa771.mp3\";","export default __webpack_public_path__ + \"static/media/icon-128.ec70f416.png\";","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n//////////////////////////////////////////////////////\n\nimport doubleBeepAudio from './../assets/audio/double-beep.mp3';\nimport blankAudio from './../assets/audio/blank.mp3';\nimport icon128 from './../assets/images/icon-128.png';\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nlet doubleBeepIOSAudioPath = './public/assets/audio/double-beep.aiff';\nlet enabled = true;\n\n// web, ios, android.\nconst isNative = (Capacitor.getPlatform() !== \"web\");\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nasync function playEmptyAudio() {\n  console.log('playEmptyAudio');\n  try {\n    let a = new Audio(blankAudio);\n    a.crossorigin = 'anonymous';\n    a.autoplay = true;\n    await a.play();\n  } catch (e) {\n    console.error('playEmptyAudio', e);\n  }\n}\n\nasync function playNotificationAudio() {\n  console.log('playNotificationAudio');\n  try {\n    let a = new Audio(doubleBeepAudio);\n    a.crossorigin = 'anonymous';\n    a.autoplay = true;\n    await a.play();\n  } catch (e) {\n    console.error('playNotificationAudio', e);\n  }\n}\n\nasync function checkNativeNotificationsAvailability () {\n  console.log('checkNativeNotificationsAvailability');\n\n  if (!isNative) {\n    await playEmptyAudio();\n  }\n  \n  console.log('checkNativeNotificationsAvailability - isNative?', isNative);\n\n  // Capacitor?\n  let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');    \n  console.log('checkNativeNotificationsAvailability - isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n\n  let avail = false;\n  //avail = (isCapacitorPluginAvailable);\n  avail = (isNative && isCapacitorPluginAvailable);\n  console.log('checkNativeNotificationsAvailability?', avail);\n  return avail;\n}\n\nasync function requestNativeNotificationsPermissions () {\n  console.log('requestNativeNotificationsPermissions');\n\n  let avail = false;\n\n  try {\n    let p = await LocalNotifications.checkPermissions();\n    if (p.display === \"granted\") {\n      avail = true;\n    } else {\n      let a = await LocalNotifications.requestPermissions();\n      if (a.display === \"granted\") {\n        avail = true;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  console.log('requestNativeNotificationsPermissions - avail', avail);  \n  return avail;\n}\n\nasync function sendNativeNotification(message, when) {\n  console.log('sendNativeNotification', message, when);\n\n  let isNativeNotificationsAvailable = await checkNativeNotificationsAvailability();\n  console.log('sendNativeNotification - isNativeNotificationsAvailable?', isNativeNotificationsAvailable);\n\n  if(isNativeNotificationsAvailable && await requestNativeNotificationsPermissions()) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"Timely Meetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: doubleBeepIOSAudioPath,\n            vibrate: true,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nasync function clearNativeNotifications() {\n  console.log('clearNativeNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"clearNativeNotifications - Notifications\", notifications);\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nasync function checkBrowserNotificationsAvailability () {\n  console.log('checkBrowserNotificationsAvailability');\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n  // https://web.dev/tags/notifications/\n  // https://notifications.spec.whatwg.org/\n  let avail = false;\n  try {\n    avail = ('Notification' in window);\n  } catch (e) {\n    console.log('checkBrowserNotificationsAvailability - error?', e);\n  }\n  console.log('checkBrowserNotificationsAvailability - supported?', avail);\n  return avail;\n}\n\nasync function checkBrowserNotificationsSchedulingAvailability () {\n  console.log('checkBrowserNotificationsSchedulingAvailability');\n\n  let NotificationIsSupported = await checkBrowserNotificationsAvailability();\n  let avail = false;\n\n  // https://web.dev/notification-triggers/\n  avail = (NotificationIsSupported && 'showTrigger' in Notification.prototype);\n  console.log(\"checkBrowserNotificationsSchedulingAvailability - Triggers supported?\", avail);\n  return avail;\n}\n\nasync function requestBrowserNotificationsPermissions () {\n  console.log('requestBrowserNotificationsPermissions');\n\n  if (await checkBrowserNotificationsAvailability()) {\n    if (Notification.permission !== \"granted\") {\n      console.log('requestBrowserNotificationsPermissions - being asked.');\n      let permission = await Notification.requestPermission();\n      console.log('requestBrowserNotificationsPermissions - permission', permission);     \n    }\n  }\n\n  let avail = (Notification.permission === 'granted');\n  console.log('requestBrowserNotificationsPermissions?', avail);\n  return avail;\n}\n\nasync function sendBrowserNotification(message, when) {\n  console.log('sendBrowserNotification', message, when);\n\n  try {\n    if (await checkBrowserNotificationsAvailability()) {\n      if (await requestBrowserNotificationsPermissions()) {\n        console.log('sendBrowserNotification - permissions already granted, attempting to send.');\n\n        let opts = {\n          requireInteraction: true,\n          vibrate: [200, 100, 200],\n          icon: icon128,\n        }\n\n        var notification = new Notification(message, opts);\n        notification.onshow = async function() { \n          console.log(\"sendBrowserNotification - Notification displayed\");\n          await playNotificationAudio();\n        };\n        console.log('sendBrowserNotification - sent', notification);\n      } else {\n        console.log('sendBrowserNotification - permissions denied.');\n        alert(message);\n      }\n    } else {\n      console.log('sendBrowserNotification - unavailable.');\n      alert(message);\n    }\n  } catch(e) {\n    console.log('sendBrowserNotification - error', e);\n    alert(message);\n  }\n}\n\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport async function pauseNotifications() {\n  console.log('pauseNotifications - current enabled?', enabled);\n  enabled = false;\n  await clearScheduledNotifications();\n  console.log('pauseNotifications - new enabled?', enabled);\n}\n\nexport async function enableNotifications() {\n  console.log('enableNotifications - current enabled?', enabled);\n  enabled = true;\n  console.log('enableNotifications - new enabled?', enabled);\n}\n\nexport async function checkNotificationsAvailability () {\n  console.log('checkNotificationsAvailability');\n\n  let n = await checkNativeNotificationsAvailability();\n  let b = await checkBrowserNotificationsAvailability();\n  await checkBrowserNotificationsSchedulingAvailability();\n  \n  if(n) {\n    await requestNativeNotificationsPermissions();\n  } else if(b) {\n    await requestBrowserNotificationsPermissions();\n  }\n}\n\nexport async function getPendingNotifications() {\n  console.log('getPendingNotifications');\n\n  let pending = {\n    notifications: []\n  }\n  if (await checkNativeNotificationsAvailability()) {\n    pending = await LocalNotifications.getPending();\n    let notifications = pending.notifications;\n    console.log(\"getPendingNotifications - Notifications\", notifications);\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('getPendingNotifications - Not implemented for Browser');\n  }\n  return pending;\n}\n\nexport async function clearScheduledNotifications() {\n  console.log('clearScheduledNotifications');\n  if (await checkNativeNotificationsAvailability()) {\n    await clearNativeNotifications();\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('clearScheduledNotifications - Not implemented for Browser');\n  }\n}\n\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW', 'enabled', enabled);\n\n  if(enabled) {\n    let when = new Date(Date.now() + 1000);\n    let success = await sendNativeNotification(message, when);\n    console.log('sendNotification - Native Notifications Sent?', success);\n\n    if (!success) {\n      console.log('sendNotification - Attempting Browser Notification.');\n      sendBrowserNotification(message, when);\n    }\n  } else {\n    console.log(\"sendNotification - Disabled\");\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when, 'enabled', enabled);\n\n  let success = false;\n\n  if (enabled) {\n    if( await checkNativeNotificationsAvailability() ) {\n      success = await sendNativeNotification(message, when);  \n    }\n    if( await checkBrowserNotificationsSchedulingAvailability() ) {\n      console.log('scheduleNotification - Not implemented for Browser');\n    }\n    console.log('scheduleNotification?', success);\n  } else {\n    console.log(\"scheduleNotification - Disabled\");\n  }\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n\n  await scheduleNotification(message, when);\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","export default __webpack_public_path__ + \"static/media/logo-trans-512.70cb432f.png\";","import React, { Component } from \"react\";\n\nimport { Capacitor } from '@capacitor/core';\n\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport { App as CapacitorApp } from '@capacitor/app';\nimport { Browser } from '@capacitor/browser';\n\nimport {\n  RefreshCircle as RefreshCircleIcon,\n  Notifications as NotificationsEnabledIcon,\n  NotificationsOffOutline as NotificationsDisabledIcon\n} from 'react-ionicons'\n\nimport * as State from '../Utils/State'\nimport * as Utils from '../Utils/DateUtils'\nimport * as Notifications from '../Utils/Notifications'\n\n//////////////////////////////////////////////////////\n\nimport version from '../version.json'\nimport './App.css';\nimport logoImage from './../assets/images/logo-trans-512.png'\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in ';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\nconst supportLink = \"mailto:support@timelymeetings.com\";\n\n// web, ios, android.\nconst isNative = (Capacitor.getPlatform() !== \"web\");\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\n/*\nNativeApp.addListener('appStateChange', ({ isActive }) => {\n  console.log('App state changed. Is active?', isActive);\n});\n\nNativeApp.addListener('appUrlOpen', data => {\n  console.log('App opened with URL:', data);\n});\n\nNativeApp.addListener('appRestoredResult', data => {\n  console.log('Restored state:', data);\n});\n*/\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nclass App extends Component {\n\n  //////////////////////////////////////////////////////\n\n  constructor() {\n    super();\n    this.state = {\n      enabled: false,\n    };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n    this.onRefreshClick = this.onRefreshClick.bind(this);\n    this.togglePause = this.togglePause.bind(this);\n    this.onWarningChange = this.onWarningChange.bind(this);\n    this.launchSupport = this.launchSupport.bind(this);\n  }\n\n  //////////////////////////////////////////////////////\n\n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  async initializeClock(id, endTime, meetingWarning) {\n    console.log('initializeClock', endTime, meetingWarning);\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - meetingWarning * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning + meetingWarning + \" minutes.\", warningTime)) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n\n    if (endTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_end, endTime)) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n\n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n\n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n\n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n\n      const bodyClassList = document.body.classList;\n\n      if (t.total > meetingWarning * 60 * 1000) {\n        bodyClassList.remove('bodyWarning');\n        bodyClassList.remove('bodyComplete');\n        bodyClassList.add('bodyDefault');\n      } else {\n        bodyClassList.add('bodyWarning');\n        bodyClassList.remove('bodyComplete');\n        bodyClassList.remove('bodyDefault');\n\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning + meetingWarning + \" minutes.\");\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);\n        setClock(0, 0, 0);\n\n        bodyClassList.remove('bodyWarning');\n        bodyClassList.add('bodyComplete');\n        bodyClassList.remove('bodyDefault');\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n    }\n\n    await updateClock();\n\n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //////////////////////////////////////////////////////\n\n  updateMeetingTime(startTime, endTime) {\n    console.log('updateMeetingTime');\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n\n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n\n  //////////////////////////////////////////////////////\n\n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n\n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n\n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n\n    let selected = undefined;\n\n    for (let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }\n    select.value = selected;\n  }\n\n  //////////////////////////////////////////////////////\n\n  async updateCountdown() {\n    console.log('updateCountdown');\n\n    State.saveToLocalStorage();\n\n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n    let meetingWarning = o.meetingWarning;\n\n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n\n\n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n\n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n\n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime, meetingWarning);\n\n  }\n\n  //////////////////////////////////////////////////////\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    await this.updateCountdown();\n  }\n\n  async onRefreshClick() {\n    console.log(\"onRefreshClick\");\n\n    this.updateStartTimeOptions();\n    await this.updateCountdown();\n  }\n\n  async onWarningChange() {\n    console.log(\"onWarningChange\");\n\n    await this.updateCountdown();\n  }\n\n  async togglePause() {\n    let enabled = this.state.enabled;\n    console.log(\"togglePause - current enabled?\", enabled);\n\n    enabled = !enabled;\n\n    this.setState({ enabled: enabled });\n\n    console.log(\"togglePause - new enabled?\", enabled);\n\n    if (enabled) {\n      await Notifications.enableNotifications();\n      await this.updateCountdown();\n    } else {\n      await Notifications.pauseNotifications();\n    }\n\n    await State.saveEnabledStateToLocalStorage(enabled);\n  }\n\n  async launchSupport() {\n    console.log(\"launchSupport\", isNative);\n    if (isNative) {\n      CapacitorApp.openUrl({ url: supportLink })\n    } else {\n      Browser.open({ url: supportLink })\n    }\n  }\n\n  //////////////////////////////////////////////////////\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    await Notifications.checkNotificationsAvailability();\n\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n\n    this.setState(\n      {\n        enabled: State.getEnabledStateToLocalStorage()\n      }\n    );\n\n    console.log('componentDidMount - state', this.state);\n\n    if (!this.state.enabled) {\n      await Notifications.pauseNotifications();\n    }\n\n    SplashScreen.hide();\n  }\n\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n\n  render() {\n    return (\n      <div className=\"content\">\n\n        <div className=\"header\">\n          <img src={logoImage} className=\"logo\" alt=\"Timely Meetings logo\" />\n          <span className=\"headerText\">\n            <h1>Timely Meetings</h1>\n            <h4>Countdown Timer</h4>\n          </span>\n        </div>\n\n        <p className=\"meetingTime\">\n          <span id=\"meetingTime\"></span>\n        </p>\n\n        <div id=\"clockdiv\">\n          <div>\n            <span className=\"hours\"></span>\n            <div className=\"clocktext\">Hours</div>\n          </div>\n          <div>\n            <span className=\"minutes\"></span>\n            <div className=\"clocktext\">Minutes</div>\n          </div>\n          <div>\n            <span className=\"seconds\"></span>\n            <div className=\"clocktext\">Seconds</div>\n          </div>\n        </div>\n\n        <div>\n\n          <p>\n\n            <label id=\"meetingWarningLabel\" className=\"label\" htmlFor=\"meetingWarning\">End of Meeting Notification: </label>\n            <select className=\"select\" name=\"meetingWarning\" id=\"meetingWarning\" defaultValue=\"5\"\n              onChange={this.onWarningChange}>\n              <option value=\"1\">1 min</option>\n              <option value=\"2\">2 min</option>\n              <option value=\"3\">3 min</option>\n              <option value=\"4\">4 min</option>\n              <option value=\"5\">5 mins</option>\n              <option value=\"10\">10 mins</option>\n              <option value=\"15\">15 mins</option>\n              <option value=\"20\">20 mins</option>\n              <option value=\"25\">25 mins</option>\n              <option value=\"30\">30 mins</option>\n              <option value=\"45\">45 mins</option>\n              <option value=\"50\">50 mins</option>\n              <option value=\"45\">55 mins</option>\n              <option value=\"60\">1 hour</option>\n            </select>\n\n            {\n              (this.state.enabled === false) &&\n              <NotificationsDisabledIcon\n                className=\"iconNotifications\"\n                title='Click to enable notifications'\n                height=\"28px\"\n                width=\"28px\"\n                onClick={this.togglePause}\n              />\n            }\n\n            {\n              (this.state.enabled === true) &&\n              <NotificationsEnabledIcon\n                className=\"iconNotifications\"\n                title='Click to disable notifications'\n                height=\"28px\"\n                width=\"28px\"\n                onClick={this.togglePause}\n              />\n            }\n\n          </p>\n\n          <p>\n\n            <label className=\"label\" htmlFor=\"meetingDuration\" id=\"meetingDurationLabel\">Duration: </label>\n            <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n              onChange={this.onDurationChange}>\n              <option value=\"15\">15 mins</option>\n              <option value=\"30\">30 mins</option>\n              <option value=\"45\">45 mins</option>\n              <option value=\"60\">1 hour</option>\n              <option value=\"90\">1.5 hours</option>\n              <option value=\"120\">2 hours</option>\n              <option value=\"150\">2.5 hours</option>\n              <option value=\"180\">3 hours</option>\n            </select>\n\n            <label id=\"meetingSpeedyLabel\" className=\"label\" htmlFor=\"meetingSpeedy\">End early?</label>\n            <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n              onChange={this.onSpeedyChange}\n            />\n\n          </p>\n\n          <p>\n            <label className=\"label\" htmlFor=\"meetingSlot\">Start: </label>\n            <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\"\n              onChange={this.onSlotChange}\n            >\n              <option value=\"-1\">Loading ...</option>\n            </select>\n\n            <RefreshCircleIcon\n              className=\"iconRefresh\"\n              title='Reset timer'\n              width='30px'\n              height='30px'\n              onClick={this.onRefreshClick}\n            />\n          </p>\n\n          {\n            (!isNative) &&\n            <div className=\"bottom\">\n              <p className=\"tinyText copyrightText\">\n                &copy; {(new Date()).getFullYear()} <a href=\"https://khilnani.org\" target=\"_blank\" rel=\"noreferrer\">Nik Khilnani</a>\n                <span> | </span>\n                <span className=\"link\" role=\"button\" tabIndex=\"0\" onClick={this.launchSupport}>Support</span>\n              <span> | </span>\n                Ver: {version.published}\n              </p>\n            </div>\n          }\n\n          {\n            (isNative) &&\n            <div className=\"bottom bottom-padding\">\n              <p className=\"tinyText copyrightText\">\n              &copy; {(new Date()).getFullYear()} <a href=\"https://timelymeetings.com\" target=\"_blank\" rel=\"noreferrer\">Timely Meetings</a>\n              <span> | </span>\n              Ver: {version.published}\n              </p>\n            </div>\n          }\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport default App;\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//////////////////////////////////////////////////////\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////"],"sourceRoot":""}