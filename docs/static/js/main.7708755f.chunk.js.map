{"version":3,"sources":["Utils.js","State.js","Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["addMinutes","date","minutes","Date","getTime","getUserOptions","console","log","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","o","checked","saveDurationToLocalStorage","localStorage","setItem","saveSlotToLocalStorage","saveSpeedyToLocalStorage","meetingSpeedy","updateFromLocalStorage","updateStartTimeOptions","getItem","obj","innerHTML","indexOf","Utils","checkCapacitorNotificationsAvailability","a","Capacitor","isPluginAvailable","isCapacitorPluginAvailable","LocalNotifications","checkPermissions","display","requestPermissions","error","sendCapacitorNotification","message","when","isCapacitorNotificationsAvailable","schedule","notifications","title","body","id","at","sound","attachments","actionTypeId","extra","success","getPendingNotifications","getPending","pending","clearCapacitorNotifications","length","cancel","sendDefaultNotification","alert","clearScheduledNotifications","sendNotification","now","scheduleNotification","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","App","state","data","onDurationChange","bind","onSpeedyChange","onSlotChange","endTime","setClock","getTimeRemaining","updateClock","t","total","style","backgroundColor","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","isNative","getPlatform","className","htmlFor","name","defaultValue","onChange","type","href","target","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7708755f.chunk.js","sourcesContent":["//-------------------------------\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//-------------------------------\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//-------------------------------\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//-------------------------------\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//-------------------------------\n  \n    \n  ","\nimport * as Utils from './Utils'\n\n//-------------------------------\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n\n  let meetingDuration = select.options[select.selectedIndex].value;\n  select = document.getElementById(\"meetingSlot\");\n\n  let meetingSlot = -1;\n  console.log('select.selectedIndex', select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n}\n\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (Utils.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n}\n\n  //-------------------------------","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n\nasync function checkCapacitorNotificationsAvailability () {\n  console.log('checkCapacitorNotificationsAvailability');\n\n  try {\n    let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');\n    console.log('isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n    \n    if ( isCapacitorPluginAvailable ) {\n      let p = await LocalNotifications.checkPermissions()\n      if (p.display === \"granted\") {\n        return true;\n      } else {\n        let a = await LocalNotifications.requestPermissions()\n        if (a.display === \"granted\") {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\nasync function sendCapacitorNotification(message, when) {\n  console.log('sendCapacitorNotification', message, when);\n\n  let isCapacitorNotificationsAvailable = await checkCapacitorNotificationsAvailability();\n  console.log('isCapacitorNotificationsAvailable?', isCapacitorNotificationsAvailable);\n\n  if(isCapacitorNotificationsAvailable) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"TimelyMeetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: null,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nexport async function getPendingNotifications() {\n  let pending = await LocalNotifications.getPending();\n  let notifications = pending.notifications;\n  console.log(\"Pending Capacitor Notifications\", notifications);\n  return pending;\n\n}\n\nasync function clearCapacitorNotifications() {\n  console.log('clearCapacitorNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"Cleared Capacitor Notifications\", notifications);\n  }\n  \n\n}\n\n///////////////////////////////////////////////////////////////\n\nasync function sendDefaultNotification(message, when) {\n\n  alert(message);\n\n/*let opts = {\n  requireInteraction: true\n}\n\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    console.log('Browser Notifications not supported.');\n    alert(message);\n  }\n  // Let's check whether notification permissions have already been granted\n  else if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    console.log('Browser Notifications already granted, attempting to send.');\n    var notification = new Notification(message, opts);\n  }\n\n  // Otherwise, we need to ask the user for permission\n  else if (Notification.permission !== \"denied\") {\n    console.log('Browser Notifications permissions being re-asked.');\n    Notification.requestPermission().then(function(permission) {\n      // If the user accepts, let's create a notification\n      if (permission === \"granted\") {\n        console.log('Browser Notifications granted after being initially denied, attempting to send.');\n        var notification = new Notification(message, opts);\n      } else {\n        console.log('Browser Notifications denied after ask.');\n        alert(message);\n      }\n    });\n  } else {\n    console.log('Browser Notifications denied.');\n    alert(message);\n  }\n  */\n}\n\n///////////////////////////////////////////////////////////////\n\nexport async function clearScheduledNotifications() {\n  console.log('clearNotifications');\n  await clearCapacitorNotifications();\n}\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW');\n\n  let when = new Date(Date.now() + 1000);\n  let success = await sendCapacitorNotification(message, when);\n  console.log('Capacitor Notifications Sent?', success);\n\n  if (!success) {\n    console.log('Attempting Default Notification.');\n    sendDefaultNotification(message, when);\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when);\n\n  let success = await sendCapacitorNotification(message, when);\n  console.log('Capacitor Notifications scheduled?', success);\n\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n  await scheduleNotification(message, when);\n}","import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport * as State from './State'\nimport * as Utils from './Utils'\nimport * as Notifications from './Notifications'\n\nimport { Capacitor } from \"@capacitor/core\";\n\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in 5 minutes';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\nclass App extends Component {\n\n  //-------------------------------\n\n  constructor() {\n    super();\n    this.state = { data: [] };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n\n  }\n\n  //-------------------------------\n  \n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  //-------------------------------\n\n  async initializeClock(id, endTime) {\n    console.log('initializeClock');\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - 5 * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning, warningTime) ) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n    \n    if(endTime > Date.now() ) {\n      if (await Notifications.scheduleNotification(message_end, endTime) ) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n  \n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    \n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n  \n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n      \n  \n      if (t.total > 5 * 60 * 1000) {\n        document.body.style.backgroundColor = \"#00ECB9\"; // default\n      } else {\n        document.body.style.backgroundColor = \"#FBF719\"; // yellow\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning);\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);\n        \n        setClock(0, 0, 0);\n        document.body.style.backgroundColor = \"#FFFFFF\"; // white\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n\n    }\n  \n    await updateClock();\n  \n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //-------------------------------\n\n  updateMeetingTime (startTime, endTime) {\n    console.log('updateMeetingTime');\n  \n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n  \n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n  \n  //-------------------------------\n  \n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n  \n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n  \n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n  \n    let selected = undefined;\n  \n    for(let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }    \n    select.value = selected;\n  }\n  \n  //-------------------------------\n  \n  async updateCountdown () {\n    console.log('updateCountdown');\n  \n    State.saveToLocalStorage();\n  \n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n  \n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n  \n  \n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n  \n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n  \n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime);\n  \n  }\n  \n  //-------------------------------\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    State.saveSlotToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n  //-------------------------------\n\n  render() {\n    // web, ios, android.\n    let isNative = Capacitor.getPlatform();\n\n    return (\n        <div className=\"content\">\n\n          <h1>Meeting Countdown Timer</h1>\n\n          <p className=\"meetingTime\"><span id=\"meetingTime\"></span></p>\n\n          <div id=\"clockdiv\">\n            <div>\n              <span className=\"hours\"></span>\n              <div className=\"clocktext\">Hours</div>\n            </div>\n            <div>\n              <span className=\"minutes\"></span>\n              <div className=\"clocktext\">Minutes</div>\n            </div>\n            <div>\n              <span className=\"seconds\"></span>\n              <div className=\"clocktext\">Seconds</div>\n            </div>\n          </div>\n\n          <div>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingDuration\">Meeting duration:</label>\n              <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n                onChange={this.onDurationChange}>\n                <option value=\"15\">15 mins</option>\n                <option value=\"30\">30 mins</option>\n                <option value=\"45\">45 mins</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"150\">2.5 hours</option>\n                <option value=\"180\">3 hours</option>\n              </select>\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSpeedy\">End 5 minutes early?</label>\n              <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n                onChange={this.onSpeedyChange}\n              />\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSlot\">Meeting start time: </label>\n              <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\" \n                onChange={this.onSlotChange}\n              >\n                <option value=\"-1\">Loading ...</option>\n              </select>\n            </p>\n          </div>\n\n          { (isNative === \"web\") && \n          <p>\n            <span className=\"tinyText\" >\n              <a href=\"https://github.com/khilnani/timelymeetings.com\" target=\"_blank\" rel=\"noreferrer\">Github</a> | <a href=\"https://khilnani.org\" target=\"_blank\"  rel=\"noreferrer\">Nik Khilnani</a>\n            </span>\n          </p>\n          }\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}