{"version":3,"sources":["Utils.js","State.js","Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["addMinutes","date","minutes","Date","getTime","getUserOptions","console","log","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","o","checked","getPausedStateToLocalStorage","paused","localStorage","getItem","saveDurationToLocalStorage","setItem","saveSpeedyToLocalStorage","meetingSpeedy","saveToLocalStorage","saveSlotToLocalStorage","updateFromLocalStorage","updateStartTimeOptions","obj","innerHTML","indexOf","Utils","enabled","checkNativeNotificationsAvailability","a","isNative","Capacitor","getPlatform","isPluginAvailable","isCapacitorPluginAvailable","avail","requestNativeNotificationsPermissions","LocalNotifications","checkPermissions","display","requestPermissions","error","sendNativeNotification","message","when","isNativeNotificationsAvailable","schedule","notifications","title","body","id","at","sound","vibrate","attachments","actionTypeId","extra","success","clearNativeNotifications","getPendingNotifications","pending","length","cancel","checkBrowserNotificationsAvailability","window","checkBrowserNotificationsSchedulingAvailability","NotificationIsSupported","Notification","prototype","requestBrowserNotificationsPermissions","permission","requestPermission","sendBrowserNotification","notification","requireInteraction","alert","pauseNotifications","clearScheduledNotifications","enableNotifications","checkNotificationsAvailability","n","b","getPending","sendNotification","now","scheduleNotification","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","NativeApp","addListener","isActive","data","App","state","onDurationChange","bind","onSpeedyChange","onSlotChange","onRefreshClick","togglePause","endTime","setClock","getTimeRemaining","updateClock","t","total","style","backgroundColor","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","setState","className","htmlFor","name","onChange","color","width","height","onClick","defaultValue","type","href","target","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f05d0932.chunk.js","sourcesContent":["//-------------------------------\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//-------------------------------\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//-------------------------------\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//-------------------------------\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//-------------------------------\n  \n    \n  ","\nimport * as Utils from './Utils'\n\n//-------------------------------\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n\n  let meetingDuration = select.options[select.selectedIndex].value;\n  select = document.getElementById(\"meetingSlot\");\n\n  let meetingSlot = -1;\n  console.log('select.selectedIndex', select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\nexport function savePausedStateToLocalStorage(paused) {\n  console.log(\"savePausedStateToLocalStorage\", paused);\n  localStorage.setItem('paused', paused)\n}\n\nexport function getPausedStateToLocalStorage() {\n  console.log(\"savePausedStateToLocalStorage\");\n\n  let paused = localStorage.getItem('paused')\n  console.log('savePausedStateToLocalStorage - paused', paused, typeof(paused));\n  return paused;\n}\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n}\n\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (Utils.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n}\n\n  //-------------------------------","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n///////////////////////////////////////////////////////////////\n\nlet enabled = true;\n\n///////////////////////////////////////////////////////////////\n\nasync function checkNativeNotificationsAvailability () {\n  console.log('checkNativeNotificationsAvailability');\n  \n  // web, ios, android?\n  let isNative = (Capacitor.getPlatform() !== \"web\");\n  console.log('isNative?', isNative);\n\n  // Capacitor?\n  let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');    \n  console.log('isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n\n  let avail = false;\n  //avail = (isCapacitorPluginAvailable);\n  avail = (isNative && isCapacitorPluginAvailable);\n  console.log('checkNativeNotificationsAvailability?', avail);\n  return avail;\n}\n\nasync function requestNativeNotificationsPermissions () {\n  console.log('requestNativeNotificationsPermissions');\n\n  let avail = false;\n\n  try {\n    let p = await LocalNotifications.checkPermissions();\n    if (p.display === \"granted\") {\n      avail = true;\n    } else {\n      let a = await LocalNotifications.requestPermissions();\n      if (a.display === \"granted\") {\n        avail = true;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  console.log('requestNativeNotificationsPermissions - avail', avail);  \n  return avail;\n}\n\nasync function sendNativeNotification(message, when) {\n  console.log('sendNativeNotification', message, when);\n\n  let isNativeNotificationsAvailable = await checkNativeNotificationsAvailability();\n  console.log('isNativeNotificationsAvailable?', isNativeNotificationsAvailable);\n\n  if(isNativeNotificationsAvailable && await requestNativeNotificationsPermissions()) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"Timely Meetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: './public/assets/double-beep.aiff',\n            vibrate: true,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nasync function clearNativeNotifications() {\n  console.log('clearNativeNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"Cleared Native Notifications\", notifications);\n  }\n}\n\n\n///////////////////////////////////////////////////////////////\n\nasync function checkBrowserNotificationsAvailability () {\n  console.log('checkBrowserNotificationsAvailability');\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n  // https://web.dev/tags/notifications/\n  // https://notifications.spec.whatwg.org/\n  let avail = ('Notification' in window);\n  console.log('Browser Notification supported?', avail);\n  return avail;\n}\n\nasync function checkBrowserNotificationsSchedulingAvailability () {\n  console.log('checkBrowserNotificationsSchedulingAvailability');\n\n  let NotificationIsSupported = await checkBrowserNotificationsAvailability();\n  let avail = false;\n\n  // https://web.dev/notification-triggers/\n  avail = (NotificationIsSupported && 'showTrigger' in Notification.prototype);\n  console.log(\"Browser Notification Triggers supported?\", avail);\n  return avail;\n}\n\nasync function requestBrowserNotificationsPermissions () {\n  console.log('requestBrowserNotificationsPermissions');\n\n  if (checkBrowserNotificationsAvailability()) {\n    if (Notification.permission !== \"granted\") {\n      console.log('Browser Notification permissions being asked.');\n      let permission = await Notification.requestPermission();\n      console.log('Browser Notification permission', permission);     \n    }\n  }\n\n  let avail = (Notification.permission === 'granted');\n  console.log('requestBrowserNotificationsPermissions?', avail);\n  return avail;\n}\n\nasync function sendBrowserNotification(message, when) {\n  console.log('sendBrowserNotification', message, when);\n\n  if (checkBrowserNotificationsAvailability() && await requestBrowserNotificationsPermissions()) {\n    console.log('Browser Notification permissions already granted, attempting to send.');\n\n    let opts = {\n      requireInteraction: true,\n      vibrate: [200, 100, 200],\n    }\n\n    var notification = new Notification(message, opts);\n    console.log('Browser Notification sent', notification);\n    \n  } else {\n    console.log('Browser Notification permissions denied.');\n    alert(message);\n  }\n\n}\n\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport async function pauseNotifications() {\n  console.log('pauseNotifications - current', enabled);\n  enabled = false;\n  clearScheduledNotifications();\n}\n\nexport async function enableNotifications() {\n  console.log('enableNotifications - current', enabled);\n  enabled = true;\n}\n\nexport async function checkNotificationsAvailability () {\n  console.log('checkNotificationsAvailability');\n\n  let n = await checkNativeNotificationsAvailability();\n  let b = await checkBrowserNotificationsAvailability();\n  await checkBrowserNotificationsSchedulingAvailability();\n  \n  if(n) {\n    await requestNativeNotificationsPermissions();\n  } else if(b) {\n    await requestBrowserNotificationsPermissions();\n  }\n}\n\nexport async function getPendingNotifications() {\n  console.log('getPendingNotifications');\n\n  let pending = {\n    notifications: []\n  }\n  if (await checkNativeNotificationsAvailability()) {\n    pending = await LocalNotifications.getPending();\n    let notifications = pending.notifications;\n    console.log(\"Pending Native Notifications\", notifications);\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('getPendingNotifications - Not implemented for Browser');\n  }\n  return pending;\n}\n\nexport async function clearScheduledNotifications() {\n  console.log('clearScheduledNotifications');\n  if (await checkNativeNotificationsAvailability()) {\n    await clearNativeNotifications();\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('clearScheduledNotifications - Not implemented for Browser');\n  }\n}\n\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW', 'enabled', enabled);\n\n  if(enabled) {\n    let when = new Date(Date.now() + 1000);\n    let success = await sendNativeNotification(message, when);\n    console.log('Native Notifications Sent?', success);\n\n    if (!success) {\n      console.log('Attempting Browser Notification.');\n      sendBrowserNotification(message, when);\n    }\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when, 'enabled', enabled);\n\n  let success = false;\n\n  if (enabled) {\n    if( await checkNativeNotificationsAvailability() ) {\n      success = await sendNativeNotification(message, when);  \n    }\n    if( await checkBrowserNotificationsSchedulingAvailability() ) {\n      console.log('scheduleNotification - Not implemented for Browser');\n    }\n    console.log('scheduleNotification?', success);\n  }\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n\n  await scheduleNotification(message, when);\n}","import React, { Component } from \"react\";\nimport { App as NativeApp } from '@capacitor/app';\nimport { RefreshCircle, StopCircle, PlayCircle } from 'react-ionicons'\n\nimport './App.css';\n\nimport * as State from './State'\nimport * as Utils from './Utils'\nimport * as Notifications from './Notifications'\n\n\n\nimport './App.css';\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in 5 minutes';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\n\n\nNativeApp.addListener('appStateChange', ({ isActive }) => {\n  console.log('App state changed. Is active?', isActive);\n});\n\nNativeApp.addListener('appUrlOpen', data => {\n  console.log('App opened with URL:', data);\n});\n\nNativeApp.addListener('appRestoredResult', data => {\n  console.log('Restored state:', data);\n});\n\nclass App extends Component {\n\n  //-------------------------------\n\n  constructor() {\n    super();\n    this.state = {\n      paused: false\n    };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n    this.onRefreshClick = this.onRefreshClick.bind(this);\n    this.togglePause = this.togglePause.bind(this);\n  }\n\n  //-------------------------------\n  \n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  //-------------------------------\n\n  async initializeClock(id, endTime) {\n    console.log('initializeClock');\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - 5 * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning, warningTime) ) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n    \n    if(endTime > Date.now() ) {\n      if (await Notifications.scheduleNotification(message_end, endTime) ) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n  \n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    \n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n  \n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n      \n  \n      if (t.total > 5 * 60 * 1000) {\n        document.body.style.backgroundColor = \"#00ECB9\"; // default\n      } else {\n        document.body.style.backgroundColor = \"#FBF719\"; // yellow\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning);\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);\n        \n        setClock(0, 0, 0);\n        document.body.style.backgroundColor = \"#FFFFFF\"; // white\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n    }\n  \n    await updateClock();\n  \n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //-------------------------------\n\n  updateMeetingTime (startTime, endTime) {\n    console.log('updateMeetingTime');\n  \n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n  \n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n  \n  //-------------------------------\n  \n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n  \n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n  \n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n  \n    let selected = undefined;\n  \n    for(let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }    \n    select.value = selected;\n  }\n  \n  //-------------------------------\n  \n  async updateCountdown () {\n    console.log('updateCountdown');\n  \n    State.saveToLocalStorage();\n  \n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n  \n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n  \n  \n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n  \n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n  \n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime);\n  \n  }\n  \n  //-------------------------------\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    this.updateStartTimeOptions();\n    await this.updateCountdown();\n  }\n\n  async onRefreshClick() {\n    console.log(\"onRefreshClick\");\n\n    this.updateStartTimeOptions();\n    await this.updateCountdown();\n  }\n\n  async togglePause() {\n    console.log(\"togglePause\");\n\n    this.setState( function (state) {\n      console.log(\"Current paused state\", state.paused);\n      let paused = !state.paused;\n      console.log(\"Changing paused state to\", paused);\n      return {paused: paused};\n    });\n\n    if (this.state.paused) {\n      await Notifications.pauseNotifications();\n    } else {\n      await Notifications.enableNotifications();\n      await this.updateCountdown();\n    }\n\n    State.savePausedStateToLocalStorage(this.state.paused);\n  }\n  //-------------------------------\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    await Notifications.checkNotificationsAvailability();\n    \n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n\n    this.setState(\n      {\n        paused: State.getPausedStateToLocalStorage()\n      }\n    );\n\n    if(this.state.paused) {\n      await Notifications.pauseNotifications();\n    }\n  }\n\n  //-------------------------------\n  //-------------------------------\n\n  render() {\n    // web, ios, android.\n    //let isNative = (Capacitor.getPlatform() !== \"web\");\n\n    return (\n        <div className=\"content\">\n\n          <h1>Meeting Countdown Timer</h1>\n\n          <p className=\"meetingTime\">\n            <span id=\"meetingTime\"></span>\n          </p>\n\n          <div id=\"clockdiv\">\n            <div>\n              <span className=\"hours\"></span>\n              <div className=\"clocktext\">Hours</div>\n            </div>\n            <div>\n              <span className=\"minutes\"></span>\n              <div className=\"clocktext\">Minutes</div>\n            </div>\n            <div>\n              <span className=\"seconds\"></span>\n              <div className=\"clocktext\">Seconds</div>\n            </div>\n          </div>\n\n          <div>\n\n          <p>\n              <label className=\"label\" htmlFor=\"meetingSlot\">Start time: </label>\n              <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\" \n                onChange={this.onSlotChange}\n              >\n                <option value=\"-1\">Loading ...</option>\n              </select>\n              <RefreshCircle\n              className=\"icon\"\n                color={'#00816a'} \n                title='Reset timer'\n                width='30px'\n                height='30px'\n                onClick={this.onRefreshClick}\n              />\n              {\n                (this.state.paused) && \n                  <PlayCircle\n                  className=\"icon\"\n                  color={'#00816a'} \n                  title='Enable notifications'\n                  height=\"30px\"\n                  width=\"30px\"\n                  onClick={this.togglePause}\n                />\n              }\n\n              {\n                (!this.state.paused) && \n                <StopCircle\n                  className=\"icon\"\n                  color={'#00816a'} \n                  title='Stop notifications'\n                  height=\"30px\"\n                  width=\"30px\"\n                  onClick={this.togglePause}\n                />\n              }\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingDuration\">Duration: </label>\n              <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n                onChange={this.onDurationChange}>\n                <option value=\"15\">15 mins</option>\n                <option value=\"30\">30 mins</option>\n                <option value=\"45\">45 mins</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"150\">2.5 hours</option>\n                <option value=\"180\">3 hours</option>\n              </select>\n\n              <label id=\"meetingSpeedyLabel\" className=\"label\" htmlFor=\"meetingSpeedy\">End early?</label>\n              <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n                onChange={this.onSpeedyChange}\n              />\n\n            </p>\n\n            <p>\n              <span className=\"tinyText\" >\n                <a href=\"https://khilnani.org\" target=\"_blank\"  rel=\"noreferrer\">Nik Khilnani</a>\n              </span>\n            </p>\n\n          </div>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}