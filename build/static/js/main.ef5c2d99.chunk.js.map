{"version":3,"sources":["Utils.js","State.js","Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["addMinutes","date","minutes","Date","getTime","getUserOptions","select","undefined","meetingDuration","document","getElementById","options","selectedIndex","value","meetingSlot","checked","saveDurationToLocalStorage","o","localStorage","setItem","saveSlotToLocalStorage","saveSpeedyToLocalStorage","meetingSpeedy","updateFromLocalStorage","updateStartTimeOptions","getItem","obj","innerHTML","indexOf","Utils","checkNativeNotificationsAvailability","a","isNative","Capacitor","getPlatform","isPluginAvailable","isCapacitorPluginAvailable","avail","requestNativeNotificationsPermissions","LocalNotifications","checkPermissions","display","requestPermissions","sendNativeNotification","message","when","isNativeNotificationsAvailable","schedule","notifications","title","body","id","at","sound","attachments","actionTypeId","extra","clearNativeNotifications","getPendingNotifications","pending","length","cancel","checkBrowserNotificationsAvailability","window","checkBrowserNotificationsSchedulingAvailability","NotificationIsSupported","Notification","prototype","requestBrowserNotificationsPermissions","permission","requestPermission","sendBrowserNotification","requireInteraction","alert","checkNotificationsAvailability","n","b","getPending","clearScheduledNotifications","sendNotification","now","scheduleNotification","success","timeInterval","notificationWarningSentOrScheduled","notificationFinalSentOrScheduled","message_warning","message_end","App","state","data","onDurationChange","bind","onSpeedyChange","onSlotChange","endTime","setClock","getTimeRemaining","updateClock","t","total","style","backgroundColor","Notifications","hours","seconds","clearInterval","parse","Math","floor","days","clock","hoursSpan","querySelector","minutesSpan","secondsSpan","h","slice","m","s","warningTime","setInterval","startTime","hour","minute","startTimeStr","toLocaleTimeString","endTimeStr","textContent","State","slots","duration","current","setHours","midnight","next","selected","push","label","toString","i","slotCount","ceil","getHours","mins","getMinutes","index","Option","meetingStartTime","meetingEndTime","this","updateMeetingTime","initializeClock","updateCountdown","className","htmlFor","name","defaultValue","onChange","type","href","target","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ef5c2d99.chunk.js","sourcesContent":["//-------------------------------\n\nexport function selectHasValue(select, value) {\n  console.log(\"selectHasValue\");\n\n  let obj = document.getElementById(select);\n  //console.log(obj);\n\n  if (obj !== null) {\n      return (obj.innerHTML.indexOf('value=\"' + value + '\"') > -1);\n  } else {\n      return false;\n  }\n}\n\n//-------------------------------\n\nexport function getNow() {\n  console.log('getNow');\n\n  let date = new Date(Date.now());\n  //date.setHours(13, 44, 0, 0);\n  let label = date.toLocaleTimeString();\n  let hours = date.getHours();\n  let mins = date.getMinutes();\n  let o = {\n    hours,\n    mins,\n    label,\n    date,\n  }\n  console.log(o)\n  return o;\n}\n\n//-------------------------------\n\nexport function addMinutes(date, minutes) {\n  //console.log(\"addMinutes\");\n  return new Date(date.getTime() + minutes*60000);\n}\n\n//-------------------------------\n\nexport function getTimeslots(now, duration) {\n  console.log('getTimeslots');\n\n  let increment = 15;\n\n  let current = new Date(Date.now());\n  current.setHours(0, 0, 0, 0);\n  const midnight = new Date(Date.now());\n  midnight.setHours(23, 59, 59, 99);\n\n  let slots = [];\n\n  while  (current < midnight) {\n    let next = addMinutes(current, increment);\n    let selected = (now >= current && now < next)\n    slots.push({\n      label: current.toLocaleTimeString(),\n      value: current.toString(),\n      selected,\n    });\n    \n    if (selected) {\n      // Add 4 extra slots in case folks want to set up for a meeting up to an hour early\n      for (let i=0; i < 4; i++) {\n        slots.push({\n          label: next.toLocaleTimeString(),\n          value: next.toString(),\n          selected: false,\n        });\n        next = addMinutes(next, increment);\n      }\n      break;\n    }\n\n    current = next;    \n  }\n\n  // don't forget the extra 4\n  let slotCount = Math.ceil(duration / increment) + 4;\n  console.log('slotCount', slotCount);\n  \n  slots = slots.slice( slots.length - slotCount);\n  console.log('slots', slots);\n\n  return slots;\n}\n\n//-------------------------------\n  \n    \n  ","\nimport * as Utils from './Utils'\n\n//-------------------------------\n\nexport function getMeetingDuration() {\n  console.log(\"getMeetingDuration\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n  let meetingDuration = select.options[select.selectedIndex].value;\n  return meetingDuration;\n}\n\nexport function getUserOptions () {\n  console.log(\"getUserOptions\");\n\n  let select = undefined;  \n  select = document.getElementById(\"meetingDuration\");\n\n  let meetingDuration = select.options[select.selectedIndex].value;\n  select = document.getElementById(\"meetingSlot\");\n\n  let meetingSlot = -1;\n  console.log('select.selectedIndex', select.selectedIndex);\n  if (select.selectedIndex > -1) \n  meetingSlot = select.options[select.selectedIndex].value;\n\n  const meetingSpeedy = document.getElementById(\"meetingSpeedy\").checked;\n\n  let o ={\n    \"meetingDuration\": meetingDuration,\n    \"meetingSlot\": meetingSlot,\n    \"meetingSpeedy\": meetingSpeedy,\n  }\n  console.log(\"getUserOptions.o\", o);\n  return o;\n}\n\nexport function saveDurationToLocalStorage() {\n  console.log(\"saveDurationToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingDuration', o.meetingDuration)\n}\n\nexport function saveSlotToLocalStorage() {\n  console.log(\"saveSlotToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSlot', o.meetingSlot)\n}\n\n\nexport function saveSpeedyToLocalStorage() {\n  console.log(\"saveSpeedyToLocalStorage\");\n\n  let o = getUserOptions(); \n  localStorage.setItem('meetingSpeedy', o.meetingSpeedy)\n}\n\nexport function saveToLocalStorage() {\n  console.log(\"saveToLocalStorage\");\n\n  saveDurationToLocalStorage();\n  saveSlotToLocalStorage();\n  saveSpeedyToLocalStorage();\n}\n\n\nexport function updateFromLocalStorage(updateStartTimeOptions) {\n  console.log(\"updateFromLocalStorage\")\n\n  let meetingDuration = localStorage.getItem('meetingDuration')\n  console.log('lc.meetingDuration', meetingDuration, typeof(meetingDuration));\n  \n  let meetingSlot = localStorage.getItem('meetingSlot')\n  console.log('lc.meetingSlot', meetingSlot, typeof(meetingSlot));\n\n  let meetingSpeedy = localStorage.getItem('meetingSpeedy')\n  console.log('lc.meetingSpeedy', meetingSpeedy, typeof(meetingSpeedy));\n\n  if (meetingDuration) {\n    document.getElementById(\"meetingDuration\").value = meetingDuration;\n    // Make sure the options are correct before trying to preselect the selected slot\n      updateStartTimeOptions();\n  }\n  \n  if (Utils.selectHasValue(\"meetingSlot\", meetingSlot))  \n    document.getElementById(\"meetingSlot\").value = meetingSlot;\n  \n  if (meetingSpeedy) {\n    console.log('meetingSpeedy.checked', (meetingSpeedy === \"true\"))\n    document.getElementById(\"meetingSpeedy\").checked = (meetingSpeedy === \"true\");\n  }\n}\n\n  //-------------------------------","import { Capacitor } from '@capacitor/core';\nimport { LocalNotifications } from '@capacitor/local-notifications';\n\n///////////////////////////////////////////////////////////////\n\nasync function checkNativeNotificationsAvailability () {\n  console.log('checkNativeNotificationsAvailability');\n  \n  // web, ios, android?\n  let isNative = (Capacitor.getPlatform() !== \"web\");\n  console.log('isNative?', isNative);\n\n  // Capacitor?\n  let isCapacitorPluginAvailable = await Capacitor.isPluginAvailable('LocalNotifications');    \n  console.log('isCapacitorPluginAvailable?', isCapacitorPluginAvailable);\n\n  let avail = false;\n  //avail = (isCapacitorPluginAvailable);\n  avail = (isNative && isCapacitorPluginAvailable);\n  console.log('checkNativeNotificationsAvailability?', avail);\n  return avail;\n}\n\nasync function requestNativeNotificationsPermissions () {\n  console.log('requestNativeNotificationsPermissions');\n\n  let avail = false;\n\n  try {\n    let p = await LocalNotifications.checkPermissions();\n    if (p.display === \"granted\") {\n      avail = true;\n    } else {\n      let a = await LocalNotifications.requestPermissions();\n      if (a.display === \"granted\") {\n        avail = true;\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  console.log('requestNativeNotificationsPermissions - avail', avail);  \n  return avail;\n}\n\nasync function sendNativeNotification(message, when) {\n  console.log('sendNativeNotification', message, when);\n\n  let isNativeNotificationsAvailable = await checkNativeNotificationsAvailability();\n  console.log('isNativeNotificationsAvailable?', isNativeNotificationsAvailable);\n\n  if(isNativeNotificationsAvailable && await requestNativeNotificationsPermissions()) {\n    try {\n      let success = await LocalNotifications.schedule({\n        notifications: [\n          {\n            title: \"TimelyMeetings\",\n            body: message,\n            id: new Date().getTime(),\n            schedule: { at: when },\n            sound: null,\n            attachments: null,\n            actionTypeId: \"\",\n            extra: null\n          }\n        ]\n      });\n      console.log('Success', success);\n      return true; \n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n  return false;\n}\n\nasync function clearNativeNotifications() {\n  console.log('clearNativeNotifications');\n\n  let pending = await getPendingNotifications();\n  let notifications = pending.notifications;\n\n  if(notifications && notifications.length > 0) {\n    await LocalNotifications.cancel(pending);  \n    console.log(\"Cleared Native Notifications\", notifications);\n  }\n}\n\n\n///////////////////////////////////////////////////////////////\n\nasync function checkBrowserNotificationsAvailability () {\n  console.log('checkBrowserNotificationsAvailability');\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n  // https://web.dev/tags/notifications/\n  // https://notifications.spec.whatwg.org/\n  let avail = ('Notification' in window);\n  console.log('Browser Notification supported?', avail);\n  return avail;\n}\n\nasync function checkBrowserNotificationsSchedulingAvailability () {\n  console.log('checkBrowserNotificationsSchedulingAvailability');\n\n  let NotificationIsSupported = await checkBrowserNotificationsAvailability();\n  let avail = false;\n\n  // https://web.dev/notification-triggers/\n  avail = (NotificationIsSupported && 'showTrigger' in Notification.prototype);\n  console.log(\"Browser Notification Triggers supported?\", avail);\n  return avail;\n}\n\nasync function requestBrowserNotificationsPermissions () {\n  console.log('requestBrowserNotificationsPermissions');\n\n  if (checkBrowserNotificationsAvailability()) {\n    if (Notification.permission !== \"granted\") {\n      console.log('Browser Notification permissions being asked.');\n      let permission = await Notification.requestPermission();\n      console.log('Browser Notification permission', permission);     \n    }\n  }\n\n  let avail = (Notification.permission === 'granted');\n  console.log('requestBrowserNotificationsPermissions?', avail);\n  return avail;\n}\n\nasync function sendBrowserNotification(message, when) {\n  console.log('sendBrowserNotification', message, when);\n\n  if (checkBrowserNotificationsAvailability() && await requestBrowserNotificationsPermissions()) {\n    console.log('Browser Notification permissions already granted, attempting to send.');\n\n    let opts = {\n      requireInteraction: true\n    }\n\n    var notification = new Notification(message, opts);\n    console.log('Browser Notification sent', notification);\n    \n  } else {\n    console.log('Browser Notification permissions denied.');\n    alert(message);\n  }\n\n}\n\n\n//////////////////////////////////////////////////////\n//////////////////////////////////////////////////////\n\nexport async function checkNotificationsAvailability () {\n  console.log('checkNotificationsAvailability');\n\n  let n = await checkNativeNotificationsAvailability();\n  let b = await checkBrowserNotificationsAvailability();\n  await checkBrowserNotificationsSchedulingAvailability();\n  \n  if(n) {\n    await requestNativeNotificationsPermissions();\n  } else if(b) {\n    await requestBrowserNotificationsPermissions();\n  }\n}\n\nexport async function getPendingNotifications() {\n  console.log('getPendingNotifications');\n\n  let pending = {\n    notifications: []\n  }\n  if (await checkNativeNotificationsAvailability()) {\n    pending = await LocalNotifications.getPending();\n    let notifications = pending.notifications;\n    console.log(\"Pending Native Notifications\", notifications);\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('getPendingNotifications - Not implemented for Browser');\n  }\n  return pending;\n}\n\nexport async function clearScheduledNotifications() {\n  console.log('clearScheduledNotifications');\n  if (await checkNativeNotificationsAvailability()) {\n    await clearNativeNotifications();\n  }\n  if (await checkBrowserNotificationsSchedulingAvailability()) {\n    console.log('clearScheduledNotifications - Not implemented for Browser');\n  }\n}\n\n\nexport async function sendNotification(message) {\n  console.log('sendNotification', message, 'NOW');\n\n  let when = new Date(Date.now() + 1000);\n  let success = await sendNativeNotification(message, when);\n  console.log('Native Notifications Sent?', success);\n\n  if (!success) {\n    console.log('Attempting Browser Notification.');\n    sendBrowserNotification(message, when);\n  }\n}\n\nexport async function scheduleNotification(message, when) {\n  console.log('scheduleNotification', message, when);\n\n  let success = false;\n\n  if( await checkNativeNotificationsAvailability() ) {\n    success = await sendNativeNotification(message, when);  \n  }\n\n  if( await checkBrowserNotificationsSchedulingAvailability() ) {\n    console.log('scheduleNotification - Not implemented for Browser');\n  }\n\n  console.log('scheduleNotification?', success);\n  return success;\n}\n\nexport async function sendTestNotification() {\n  console.log('sendTesteNotification (5s)');\n\n  let when = new Date(Date.now() + 1000 * 5);\n  let message = when.toLocaleTimeString();\n\n  await scheduleNotification(message, when);\n}","import React, { Component } from \"react\";\n\nimport './App.css';\n\nimport * as State from './State'\nimport * as Utils from './Utils'\nimport * as Notifications from './Notifications'\n\nimport { Capacitor } from \"@capacitor/core\";\n\nlet timeInterval = undefined;\nlet notificationWarningSentOrScheduled = false\nlet notificationFinalSentOrScheduled = false\n\nconst message_warning = 'Your meeting will end in 5 minutes';\nconst message_end = 'Your meeting has ended';\nconst browser_title = 'Timely Meetings | Meeting Countdown Timer';\n\nclass App extends Component {\n\n  //-------------------------------\n\n  constructor() {\n    super();\n    this.state = { data: [] };\n\n    this.onDurationChange = this.onDurationChange.bind(this);\n    this.onSpeedyChange = this.onSpeedyChange.bind(this);\n    this.onSlotChange = this.onSlotChange.bind(this);\n\n  }\n\n  //-------------------------------\n  \n  // Based on https://www.sitepoint.com/build-javascript-countdown-timer-no-dependencies/\n  // CSS from https://stackoverflow.com/questions/7082257/css-how-to-skin-a-select-box-with-css\n\n\n  //-------------------------------\n\n  async initializeClock(id, endTime) {\n    console.log('initializeClock');\n\n    clearInterval(timeInterval);\n    notificationWarningSentOrScheduled = false;\n    notificationFinalSentOrScheduled = false;\n\n    // schedule notifications\n    // if not successful send in real time\n    await Notifications.clearScheduledNotifications();\n\n    let warningTime = new Date(Date.parse(endTime) - 5 * 60 * 1000);\n    if (warningTime > Date.now()) {\n      if (await Notifications.scheduleNotification(message_warning, warningTime) ) {\n        notificationWarningSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time is sooner than the warning time, skipping warning notification.');\n      notificationWarningSentOrScheduled = true;\n    }\n    \n    if(endTime > Date.now() ) {\n      if (await Notifications.scheduleNotification(message_end, endTime) ) {\n        notificationFinalSentOrScheduled = true;\n      }\n    } else {\n      console.log('End time has past, skipping end notification.');\n      notificationFinalSentOrScheduled = true;\n    }\n\n    console.log('notificationWarningSentOrScheduled', notificationWarningSentOrScheduled);\n    console.log('notificationFinalSentOrScheduled', notificationFinalSentOrScheduled);\n  \n    // Debug if anything pending\n    await Notifications.getPendingNotifications();\n\n    function setClock(hours, minutes, seconds) {\n      //console.log(\"setClock\", hours, minutes, seconds);\n\n      const clock = document.getElementById(id);\n      const hoursSpan = clock.querySelector(\".hours\");\n      const minutesSpan = clock.querySelector(\".minutes\");\n      const secondsSpan = clock.querySelector(\".seconds\");\n\n      let h = (\"0\" + hours).slice(-2);\n      let m = (\"0\" + minutes).slice(-2);\n      let s = (\"0\" + seconds).slice(-2);\n\n      hoursSpan.innerHTML = h;\n      minutesSpan.innerHTML = m;\n      secondsSpan.innerHTML = s;\n\n      if (document && document['title']) {\n        document.title = h + ':' + m + ':' + s + ' - ' + browser_title;\n      }\n    }\n\n    function getTimeRemaining(endTime) {\n      const total = Date.parse(endTime) - Date.parse(new Date());\n      const seconds = Math.floor((total / 1000) % 60);\n      const minutes = Math.floor((total / 1000 / 60) % 60);\n      const hours = Math.floor((total / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    \n      return {\n        total,\n        days,\n        hours,\n        minutes,\n        seconds\n      };\n    }\n  \n    async function updateClock() {\n      const t = getTimeRemaining(endTime);\n\n      //console.log(\"updateClock\", t.total);\n      console.log(\"updateClock\");\n      \n  \n      if (t.total > 5 * 60 * 1000) {\n        document.body.style.backgroundColor = \"#00ECB9\"; // default\n      } else {\n        document.body.style.backgroundColor = \"#FBF719\"; // yellow\n        if (!notificationWarningSentOrScheduled) {\n          notificationWarningSentOrScheduled = true\n          await Notifications.sendNotification(message_warning);\n        }\n      }\n\n      if (t.total > 0) {\n        setClock(t.hours, t.minutes, t.seconds);\n      } else {\n        clearInterval(timeInterval);\n        \n        setClock(0, 0, 0);\n        document.body.style.backgroundColor = \"#FFFFFF\"; // white\n\n        if (!notificationFinalSentOrScheduled) {\n          notificationFinalSentOrScheduled = true\n          await Notifications.sendNotification(message_end);\n        }\n      }\n    }\n  \n    await updateClock();\n  \n    timeInterval = setInterval(updateClock, 1000);\n  }\n\n  //-------------------------------\n\n  updateMeetingTime (startTime, endTime) {\n    console.log('updateMeetingTime');\n  \n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n    let options = {\n      hour: \"numeric\",\n      minute: \"2-digit\"\n    };\n    const startTimeStr = startTime.toLocaleTimeString(\"en-us\", options);\n    let endTimeStr = endTime.toLocaleTimeString(\"en-us\", options);\n  \n    document.getElementById(\"meetingTime\").textContent = startTimeStr + \" to \" + endTimeStr\n  }\n  \n  //-------------------------------\n  \n  updateStartTimeOptions() {\n    console.log('updateStartTimeOptions');\n  \n    let meetingDuration = State.getMeetingDuration();\n    let now = Utils.getNow();\n    let slots = Utils.getTimeslots(now.date, meetingDuration);\n  \n    let select = document.getElementById(\"meetingSlot\");\n    select.options.length = 0;\n  \n    let selected = undefined;\n  \n    for(let index in slots) {\n      select.options[select.options.length] = new Option(slots[index].label, slots[index].value);\n      if (slots[index].selected)\n        selected = slots[index].value;\n    }    \n    select.value = selected;\n  }\n  \n  //-------------------------------\n  \n  async updateCountdown () {\n    console.log('updateCountdown');\n  \n    State.saveToLocalStorage();\n  \n    let o = State.getUserOptions();\n    let meetingDuration = o.meetingDuration;\n    let meetingSlot = o.meetingSlot;\n    let meetingSpeedy = o.meetingSpeedy;\n  \n    let meetingStartTime = new Date(Date.parse(meetingSlot));\n    console.log('meetingStartTime', meetingStartTime);\n  \n  \n    if (meetingSpeedy === true || meetingSpeedy === \"true\") {\n      meetingDuration = meetingDuration - 5;\n    }\n  \n    let meetingEndTime = new Date(Date.parse(meetingStartTime) + meetingDuration * 60 * 1000);\n    console.log('meetingEndTime', meetingEndTime);\n  \n    // update display\n    this.updateMeetingTime(meetingStartTime, meetingEndTime);\n\n    await this.initializeClock(\"clockdiv\", meetingEndTime);\n  \n  }\n  \n  //-------------------------------\n\n  async onDurationChange() {\n    console.log(\"onDurationChange\");\n\n    State.saveDurationToLocalStorage();\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  async onSpeedyChange() {\n    console.log(\"onSpeedyChange\");\n\n    State.saveSpeedyToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  async onSlotChange() {\n    console.log(\"onSlotChange\");\n\n    State.saveSlotToLocalStorage();\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    await Notifications.checkNotificationsAvailability();\n\n    this.updateStartTimeOptions();\n    State.updateFromLocalStorage(this.updateStartTimeOptions);\n    await this.updateCountdown();\n  }\n\n  //-------------------------------\n  //-------------------------------\n\n  render() {\n    // web, ios, android.\n    let isNative = (Capacitor.getPlatform() !== \"web\");\n\n    return (\n        <div className=\"content\">\n\n          <h1>Meeting Countdown Timer</h1>\n\n          <p className=\"meetingTime\"><span id=\"meetingTime\"></span></p>\n\n          <div id=\"clockdiv\">\n            <div>\n              <span className=\"hours\"></span>\n              <div className=\"clocktext\">Hours</div>\n            </div>\n            <div>\n              <span className=\"minutes\"></span>\n              <div className=\"clocktext\">Minutes</div>\n            </div>\n            <div>\n              <span className=\"seconds\"></span>\n              <div className=\"clocktext\">Seconds</div>\n            </div>\n          </div>\n\n          <div>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingDuration\">Meeting duration:</label>\n              <select className=\"select\" name=\"meetingDuration\" id=\"meetingDuration\" defaultValue=\"30\"\n                onChange={this.onDurationChange}>\n                <option value=\"15\">15 mins</option>\n                <option value=\"30\">30 mins</option>\n                <option value=\"45\">45 mins</option>\n                <option value=\"60\">1 hour</option>\n                <option value=\"90\">1.5 hours</option>\n                <option value=\"120\">2 hours</option>\n                <option value=\"150\">2.5 hours</option>\n                <option value=\"180\">3 hours</option>\n              </select>\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSpeedy\">End 5 minutes early?</label>\n              <input className=\"checkbox\" type=\"checkbox\" id=\"meetingSpeedy\" name=\"meetingSpeedy\"\n                onChange={this.onSpeedyChange}\n              />\n            </p>\n\n            <p>\n              <label className=\"label\" htmlFor=\"meetingSlot\">Meeting start time: </label>\n              <select className=\"select\" name=\"meetingSlot\" id=\"meetingSlot\" \n                onChange={this.onSlotChange}\n              >\n                <option value=\"-1\">Loading ...</option>\n              </select>\n            </p>\n          </div>\n\n          { \n            (!isNative) && \n            <p>\n              <span className=\"tinyText\" >\n                <a href=\"https://khilnani.org\" target=\"_blank\"  rel=\"noreferrer\">Nik Khilnani</a>\n              </span>\n            </p>\n          }\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}